{"version":3,"sources":["contexts/Web3Context.tsx","components/topbar/MainMenu.tsx","components/widgets/Spinner.tsx","hooks/AddressUtils.tsx","components/widgets/Button.tsx","components/topbar/ClaimRewardsModal.tsx","components/topbar/Wallet.tsx","components/layout/TopBar.tsx","components/widgets/Input.tsx","components/punk-card/PunkCard.tsx","components/punk-card/PunkCardList.tsx","components/widgets/SelectField.tsx","components/widgets/IconButton.tsx","components/PunkSearchBar.tsx","components/widgets/ConnectWrapper.tsx","components/DiamondHands.tsx","components/Collection.tsx","components/SocialLinks.tsx","components/SpeechBubble.tsx","components/PunksRow.tsx","components/Home.tsx","components/PageMenuBar.tsx","components/marketplace/MarketplaceStats.tsx","contexts/CollectionInfoContext.tsx","components/PunkFilters.tsx","components/marketplace/Marketplace.tsx","components/NFTCalendar.tsx","components/NFTCalendarForm.tsx","components/PunkTradeHistory.tsx","modals/ListOnMarketModal.tsx","modals/AdjustPriceModal.tsx","modals/BuyPunkModal.tsx","modals/SendTokenModal.tsx","components/PunkDetails.tsx","components/layout/Main.tsx","components/layout/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CHAIN_ID","RPC_URL","defaultWeb3Data","web3","undefined","signedInAddress","signedInAddressShort","connect","disconnect","contracts","fetched","pcs","shitpunks","shitpunks2","shitmarket","chain","writeContract","Web3Context","React","createContext","Web3Provider","props","console","log","useState","setWeb3","setSignedInAddress","setContracts","setChain","defaultWeb3","Web3","useMemo","a","fetchContract","url","fetch","res","json","Promise","all","contract_pcs","contract_shitpunks","contract_shitpunks2","contract_shitmarket","web3Modal","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","network","chainId","Web3Modal","cacheProvider","theme","cachedProvider","provider","on","eth","getChainId","currentProvider","request","method","params","utils","numberToHex","setImmediate","address","selectedAddress","accounts","clearCachedProvider","contractJson","methodArgs","value","success","error","contract","Contract","abi","methods","tx","data","encodeABI","estimateGas","from","gas","getGasPrice","gasPrice","transcationConfig","to","sendTransaction","receipt","message","Provider","length","substr","children","MainMenu","location","useLocation","className","text","activeMatch","map","link","active","pathname","startsWith","isActive","Spinner","size","small","useAddressUtils","useContext","formatDate","useCallback","dateString","Date","toLocaleDateString","day","month","year","formatAddress2","mini","toLowerCase","formatAddressMini","formatAddress","addressLink","txLink","walletLink","href","Button","onClick","setTimeout","ClaimRewardsButton","balance","setBalance","status","setStatus","useEffect","fetchRewards","getReflectionBalances","call","reflectionBalances","bnb","fromWei","claimRewards","inProgress","transactionHash","rel","target","title","ClaimRewardsModal","modal","nested","trigger","close","WalletModal","didCopyAddress","setDidCopyAddress","useRef","navigator","clipboard","writeText","closeParent","WalletModalTrigger","lockScroll","position","Wallet","TopBar","id","src","Input","onChange","ev","type","placeholder","pattern","inputMode","label","TimeAgo","addLocale","en","timeAgo","UpdatedText","event","prevListing","parseFloat","price","PunkCard","rank","showFront","setShowFront","useSearchParams","searchParams","setSearchParams","metadata","rarityImage","punkImage","image","updatedAt","timestamp","format","marketplaceImage","marketplace","flipCard","loader","container","seller","buyer","attributes","attr","isSelected","get","trait_type","delete","set","replace","tokenId","alt","name","PunkCardList","classSuffix","loading","total","tokens","token","colourStyles","control","styles","backgroundColor","border","boxShadow","color","paddingLeft","cursor","option","singleValue","margin","fontFamily","valueContainer","padding","dropdownIndicator","SelectField","classNamePrefix","isClearable","components","IndicatorSeparator","Option","optionProps","countDiv","count","toFixed","floorDiv","floor","innerProps","showFloorPrices","defaultValue","IconButton","iconClass","PunkSearchBar","priceSortOptions","rankSortOptions","modeSpecificSortOptions","activity","forsale","sortOptions","marketplaceMode","filters","numFilters","key","includes","selectedSort","sortDefaultValue","find","opt","defaultSort","style","display","gap","showFilters","refresh","ConnectWrapper","connectText","getDiscordAuthUri","action","redirectUri","window","origin","DiamondHandsCriterias","criterias","description","criteria","index","DiamondHandsExtraInfo","linked","isVisible","setVisible","DiamondHands","diamondHandsApi","fetchStatusSalt","setFetchStatusSalt","pending","linkStatus","setLinkStatus","hasWallet","then","discordCode","diamondhandsAction","apiFunc","apiUri","axios","fetchFromPancake","viewAsksByCollectionAndSeller","asks","tokenIds","askInfo","fetchFromToken","parseInt","balanceOf","range","Array","keys","i","tokenOfOwnerByIndex","assetId","assetIds","sortTokens","secondarySort","firstSortValue","b","sortMode","sort","priceA","Number","MAX_VALUE","priceB","Collection","walletId","setWalletId","setLoading","setError","invalidAddress","setInvalidAddress","inventory","setInventory","refreshSalt","setRefreshSalt","has","fetchTokens","isAddress","catch","err","notOnPcsIds","contractShitMarket","tokenInfo","getListing","listing","forSale","listingInfo","notOnPcs","tokenList","getReflectionBalance","bal","balances","totalBal","reduce","acc","cur","tokenIdsString","join","metaDataBlob","metaDataJson","withTokenId","wallet","SocialLinks","links","icon","item","animationDelay","SpeechBubble","extraClassName","SpeechBubbles","phrases","x","arrowPosition","PunksOfTheDayText","split","letter","PunksOfTheDayImages","punks","slope","imgSize","punk","punkLink","imageLink","rarityLink","width","height","y","fill","PunksRow","midnight","setHours","seed","getTime","setPunks","random","Random","MersenneTwister19937","integer","resolve","reject","img","Image","onload","onerror","partialVisibility","xmlns","viewBox","clipPathUnits","points","gradientTransform","offset","stopColor","clipPath","Home","numEventsShown","setNumEventsShown","keyEvents","date","slice","toDateString","Math","min","PageMenuBar","MarketplaceStatDiff","diff","variant","verbose","MarkeplaceStats","stats","setStats","getHoldersDiff","now","holdersCount","minus24h","floorToday","floorYesterday","getFloorDiff","volume","volumeToday","volumeYesterday","getVolumeDiff","CollectionInfoContext","CollectionInfoProvider","rarityData","PunkFilters","attributeFloor","setAttributeFloor","setShowFloorPrices","handleChange","fetchAttributeFloor","formatFloorPrice","floorPriceString","floorPriceBnb","fields","traits","trait","values","floorType","floorPrice","searchParam","val","skins","skin","ranks","searchRank","searchAttrCount","searchSkin","attrCountFields","attrCount","visible","hideFilters","checked","Marketplace","setShowFilters","fetchingMore","setFetchingMore","lastKnownBlock","setLastKnownBlock","lastSyncedBlock","setLastSyncedBlock","syncDelay","setSyncDelay","lastFetchedPage","setData","fetchSalt","setFetchSalt","queryParams","push","queryString","pageToFetch","page","withMetadata","currentTime","last","getTimestamp","history","getLastPrice","blockNumber","punkID","numFound","getBlockNumber","fetchTimeStamps","getBlock","lastKnown","lastSynced","syncDelayInSeconds","max","lastSyncedTime","round","NFTCalendarDescription","expanded","setExpanded","words","first50","splice","NFTCalendarRow","socialLinks","addSocialLink","url_web","url_twitter","url_discord","url_telegram","socialIcons","imageUrl","mintPrice","totalSupply","NFTCalendar","upcomingMints","setUpcomingMints","pastMints","setPastMints","mints","byDate","nftDrop","dateTime","drops","tempUpcoming","Object","filter","tempPastMints","mintsToShow","mode","dateInfo","colSpan","TextInput","flexDirection","NFTCalendarFormPageContainer","NFTCalendarForm","setImageFile","imageFileSrc","setImageFileSrc","validationErrors","setValidationErrors","formValues","setFormValues","validateString","errors","minWords","validateUrl","str","RegExp","test","setFormValue","newValue","preventDefault","post","onSubmit","maxSize","file","reader","FileReader","e","result","readAsDataURL","types","rows","selected","tabIndex","autoComplete","PunkTradeHistory","tradeHistory","setTradeHistory","fetchHistory","punkId","sorted","createdAt","salt","row","ListStep_WrapToken","waiting","setWaiting","state","setState","wrapToken","ListStep_ApproveContract","startApproval","approve","onSuccess","ListStep_ListToken","setPrice","listToken","priceInWei","toWei","results","marginTop","marginLeft","ListOnMarketModal","isWrapped","setWrapped","isApproved","setApproved","isLoading","checkWrapped","ownerOf","owner","checkApproval","getApproved","approvedAddress","getStep","AdjustPriceModal","setResult","adjustPrice","adjustPriceOnMarketplace","sellInfo","render","onClose","BuyPunkModal","signTransaction","onOpen","SendTokenModal","setAddress","PunkDetails","useParams","tokenIdMap","forEach","_tokenId","setMetadata","setOwner","setSellInfo","ownedByYou","setOwnedByYou","marketplaceError","setMarketplaceError","waitingForTransaction","setWaitingForTransaction","tradehistorySalt","setTradeHistorySalt","fetchOwner","contractOld","contractPcs","viewAsksByCollectionAndTokenIds","marketplaceLink","fetchMetadata","owned","rarity","t","v","rarityPercent","cancelListing","cancelListingFromMarketPlace","alignItems","marginRight","Main","path","element","Footer","copied","setCopied","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.093ba9e9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useMemo } from 'react'\r\nimport Web3 from \"web3\";\r\nimport { TransactionConfig } from 'web3-core'\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\n/*\r\nimport contract_pcs from \"../data/contract_pcs.json\"\r\nimport contract_shitpunks from \"../data/contract_shitpunks.json\"\r\nimport contract_shitpunks2 from \"../data/contract_shitpunks2.json\"\r\nimport contract_shitmarket from \"../data/contract_shitmarket.json\"\r\n*/\r\n\r\nconst CHAIN_ID = 56;\r\nconst RPC_URL = {\r\n    56: 'https://bsc-dataseed.binance.org/',\r\n    97: 'https://data-seed-prebsc-1-s1.binance.org:8545/'\r\n} \r\n\r\ninterface Contracts {\r\n    fetched: boolean;\r\n    pcs: any;\r\n    shitpunks: any;\r\n    shitpunks2: any;\r\n    shitmarket: any;\r\n}\r\n\r\ninterface Web3Data {\r\n    web3: Web3 | undefined,\r\n    signedInAddress: string;\r\n    signedInAddressShort: string;\r\n    connect: any;\r\n    disconnect: any;\r\n    contracts: Contracts;\r\n    chain: number;\r\n    writeContract: any;\r\n}\r\n\r\nconst defaultWeb3Data: Web3Data = { \r\n    web3: undefined, \r\n    signedInAddress: \"\", \r\n    signedInAddressShort: \"\",\r\n    connect: null, \r\n    disconnect: null,\r\n    contracts: { fetched: false, pcs: undefined, shitpunks: undefined, shitpunks2: undefined, shitmarket: undefined },\r\n    chain: -1,\r\n    writeContract: undefined\r\n}\r\n\r\nexport const Web3Context = React.createContext<Web3Data>(defaultWeb3Data)\r\n\r\nexport const Web3Provider: React.FC = ({\r\n    ...props\r\n}) => {\r\n    console.log(\"Web3Provider\")\r\n\r\n    const [web3, setWeb3] = useState<Web3>();\r\n    const [signedInAddress, setSignedInAddress] = useState(\"\");\r\n    const [contracts, setContracts] = useState<any>({})\r\n    const [chain, setChain] = useState<number>(-1)\r\n\r\n    const defaultWeb3 = new Web3(RPC_URL[CHAIN_ID])\r\n\r\n    useMemo(async () => {\r\n        console.log(\"Fetching contracts\")\r\n\r\n        const fetchContract = async (url) => {\r\n            try {\r\n                const res = await fetch(url)\r\n                const json = await res.json();\r\n                return json;\r\n            } catch (e) {\r\n                console.log(\"error fetching\", url, e);\r\n            }\r\n        }\r\n\r\n        const [\r\n            contract_pcs,\r\n            contract_shitpunks,\r\n            contract_shitpunks2,\r\n            contract_shitmarket\r\n        ] = await Promise.all([\r\n            fetchContract(\"/data/pcs.json\"),\r\n            fetchContract(\"/data/shitpunks.json\"),\r\n            fetchContract(\"/data/shitpunks2.json\"),\r\n            fetchContract(\"/data/shitpunksmarket.json\")\r\n        ]);\r\n\r\n        console.log(\"Fetching contracts complete\")\r\n\r\n        setContracts({\r\n            fetched: true,\r\n            pcs: contract_pcs,\r\n            shitpunks: contract_shitpunks,\r\n            shitpunks2: contract_shitpunks2,\r\n            shitmarket: contract_shitmarket\r\n        })\r\n    }, [])\r\n\r\n    const web3Modal = useMemo(() => {\r\n        console.log(\"creating web3 modal\")\r\n        const providerOptions = {\r\n            walletconnect: {\r\n                package: WalletConnectProvider,\r\n                options: {\r\n                    rpc: RPC_URL,\r\n                    network: 'binance',\r\n                    chainId: CHAIN_ID,\r\n                    //infuraId: process.env.REACT_APP_INFURA_ID,\r\n                },\r\n            },\r\n        };\r\n\r\n        return new Web3Modal({\r\n            cacheProvider: true,\r\n            providerOptions: providerOptions,\r\n            theme: \"dark\"\r\n        });       \r\n    }, [])\r\n\r\n    const connect = async () => {\r\n        console.log(\"connect was called!\");\r\n        \r\n        if (!web3Modal) {\r\n            return;\r\n        }\r\n\r\n        console.log(\"cache\", web3Modal.cachedProvider)\r\n        \r\n        let provider = await web3Modal.connect();  \r\n        let web3 = new Web3(provider);\r\n        \r\n        // Subscribe to chainId change\r\n        provider.on(\"chainChanged\", (chainId: number) => {\r\n            if (chainId != CHAIN_ID) {\r\n                disconnect();\r\n            }\r\n            console.log(\"chainChanged\", chainId);\r\n        });\r\n\r\n        const chainId = await web3.eth.getChainId();\r\n        if (chainId != CHAIN_ID) {\r\n            //alert(\"Wrong chain!\")\r\n            await (web3.currentProvider as any)?.request({\r\n                method: 'wallet_switchEthereumChain',\r\n                params: [{ chainId: web3.utils.numberToHex(CHAIN_ID) }], // chainId must be in hexadecimal numbers\r\n            });\r\n\r\n            const chainId = await web3.eth.getChainId();\r\n            //if (chainId == CHAIN_ID) {\r\n                setImmediate(() => {\r\n                    console.log(\"delaying connect...\")\r\n                    connect();\r\n                })\r\n            //}\r\n            return;\r\n        }\r\n\r\n        console.log(\"Connected to chain: \" + chainId)\r\n        setWeb3(web3)\r\n        setChain(chainId);\r\n\r\n        if (chainId == CHAIN_ID) {\r\n            const address = provider.selectedAddress || provider.accounts[0]\r\n            setSignedInAddress(address)\r\n            return address;\r\n        } else {\r\n            setSignedInAddress(\"\")\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    const disconnect = async () => {\r\n        await web3Modal?.clearCachedProvider();\r\n        setSignedInAddress(\"\")\r\n    }\r\n\r\n    useMemo(async () => {\r\n        console.log(\"useMemo - calling connect()\")\r\n        if (web3Modal.cachedProvider) {\r\n            await connect();\r\n        }\r\n    }, [])\r\n\r\n    const getDefaultWeb3 = () => {\r\n        console.log(\"using default web3\")\r\n        return defaultWeb3;\r\n    }\r\n\r\n    const writeContract = async (contractJson, method, methodArgs, value) => {\r\n        if (!web3) {\r\n            return {\r\n                success: false,\r\n                error: \"Not connected\"\r\n            }\r\n        }\r\n        try {\r\n            const contract = new web3.eth.Contract(contractJson.abi, contractJson.address)\r\n            const tx = await contract.methods[method](...methodArgs);\r\n            const data = tx.encodeABI();\r\n            const gas = await tx.estimateGas({from: signedInAddress, value: value});\r\n            const gasPrice = await web3.eth.getGasPrice();       \r\n            const transcationConfig: TransactionConfig = {\r\n                from: signedInAddress,\r\n                to: contractJson.address,\r\n                gas: gas,\r\n                value: value,\r\n                gasPrice: gasPrice,\r\n                data: data,\r\n                chainId: CHAIN_ID,\r\n            }\r\n        \r\n            const receipt = await web3.eth.sendTransaction(transcationConfig);    \r\n            return {\r\n                success: true,\r\n                receipt: receipt\r\n            }\r\n        } catch (e: any) {\r\n            console.log(e);\r\n            return {\r\n                success: false,\r\n                error: e.message || e\r\n            }\r\n        }   \r\n    }\r\n\r\n    return (<Web3Context.Provider value={{\r\n        web3: web3 || getDefaultWeb3(),\r\n        signedInAddress: signedInAddress,\r\n        signedInAddressShort: signedInAddress.length > 0 ? (signedInAddress.substr(0,6) + \"...\" + signedInAddress.substr(signedInAddress.length - 3, 3)) : \"\",\r\n        connect: connect,\r\n        disconnect: disconnect,\r\n        contracts: contracts,\r\n        chain: chain,\r\n        writeContract: writeContract\r\n    }}>{props.children}</Web3Context.Provider>)\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function MainMenu() {\r\n    const location = useLocation();\r\n\r\n    const links = [\r\n        { to: '/home', text: 'home' },\r\n        { to: '/marketplace/forsale', text: 'marketplace', activeMatch: \"/marketplace\" },\r\n        { to: '/collection', text: 'collection' },\r\n        { to: '/nftdrops/upcoming', text: 'NFT drops', activeMatch: \"/nftdrops\" },\r\n    ]\r\n\r\n    const activeClassName = \"main-menu-link main-menu-link--active\"\r\n    const inActiveClassName = \"main-menu-link\"\r\n\r\n    return (\r\n        <div className=\"main-menu\">\r\n            { links.map(link => {\r\n                const active = location.pathname.startsWith(link.activeMatch || link.to)\r\n                return (\r\n                    <NavLink key={link.to} to={link.to} className={({ isActive }) => (isActive || active) ? activeClassName : inActiveClassName }>{link.text}</NavLink>\r\n                )\r\n            }) }           \r\n        </div>\r\n    )\r\n}","export default function Spinner(props) {\r\n    const size = props.small ? \"\" : \"fa-3x\"\r\n    return (\r\n    <div className={\"spinner \" + size}>\r\n        <i className=\"fas fa-spinner fa-spin\"></i>\r\n    </div>\r\n    )\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Web3Context } from \"../contexts/Web3Context\";\r\n\r\nexport default function useAddressUtils() {\r\n\r\n    const {signedInAddress, contracts} = useContext(Web3Context)\r\n\r\n    const walletLink = (address) => {\r\n        return (\r\n            <a className=\"wallet-link\" href={`/collection?wallet=${address}`}><i className=\"fas fa-wallet\"></i></a>\r\n        )\r\n    }\r\n\r\n    const formatDate = useCallback((dateString: string) => {\r\n        return new Date(dateString).toLocaleDateString('en-GB', {\r\n            day : 'numeric',\r\n            month : 'short',\r\n            year : 'numeric'\r\n        })\r\n    }, [])\r\n\r\n    const formatAddress2 = useCallback((address, mini: boolean) => {\r\n        if (address == \"0x0000000000000000000000000000000000000000\") {\r\n            return \"0\";\r\n        }\r\n\r\n        if (signedInAddress && address && address.toLowerCase() == signedInAddress.toLowerCase()) {\r\n            return \"You\"\r\n        }\r\n\r\n        if (address == \"0xFa7ce4Bc043a5706c4a706B12b63b27e441d7897\") {\r\n            return \"Shitpunks (old)\"\r\n        } else if (address == \"0x11304895f41C5A9b7fBFb0C4B011A92f1020EF96\") {\r\n            return \"Shitpunks\"\r\n        } else if (address == \"0x17539cCa21C7933Df5c980172d22659B8C345C5A\") {\r\n            return \"PancakeSwap\"\r\n        }\r\n\r\n        if (!address) {\r\n            return \"\"\r\n        }\r\n\r\n        if (mini) {\r\n            return address.substr(0,6);\r\n        } else {\r\n            return address.substr(0,6) + \"...\" + address.substr(address.length-3);\r\n        }\r\n        \r\n    }, [signedInAddress])\r\n\r\n    const formatAddressMini = useCallback(address => formatAddress2(address, true), []);\r\n    const formatAddress = useCallback(address => formatAddress2(address, false), []);\r\n\r\n    const addressLink = useCallback((address) => {\r\n        return `https://bscscan.com/address/${address}`\r\n    }, [])\r\n\r\n    const txLink = useCallback((address) => {\r\n        return `https://bscscan.com/tx/${address}`\r\n    }, [])\r\n\r\n    return {\r\n        formatDate,\r\n        formatAddress,\r\n        formatAddressMini,\r\n        addressLink,\r\n        txLink,\r\n        walletLink\r\n    }\r\n}\r\n","export default function Button(props) {\r\n    const onClick = () => {\r\n        if (!props.onClick) {\r\n            return\r\n        }\r\n        setTimeout(() => {\r\n            props.onClick();\r\n        }, 100)\r\n    }\r\n    return (<button onClick={onClick} className={\"button \" + props.className || ''}>\r\n        <span className=\"button-shadow\"></span>\r\n        <span className=\"button-edge\"></span>\r\n        <span className=\"button-front\">\r\n            {props.children}\r\n        </span>     \r\n    </button>)\r\n}","import Popup from 'reactjs-popup'\r\nimport { Web3Context } from \"../../contexts/Web3Context\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { TransactionConfig } from 'web3-core'\r\nimport Spinner from '../widgets/Spinner';\r\nimport useAddressUtils from '../../hooks/AddressUtils';\r\nimport Button from '../widgets/Button';\r\n\r\nexport function ClaimRewardsButton(props: any) {\r\n    const { web3, signedInAddress, contracts } = useContext(Web3Context)\r\n    const [ balance, setBalance ] = useState<string | null>(null);\r\n    const [ status, setStatus ] = useState<any>({});\r\n    const { txLink } = useAddressUtils();\r\n\r\n    useEffect(() => {\r\n        const fetchRewards = async () => {\r\n            if (!web3) {\r\n                return null;\r\n            }\r\n\r\n            const contractJson = contracts[props.contract]\r\n            const contract = new web3.eth.Contract(contractJson.abi, contractJson.address)\r\n            const reflectionBalances = await contract.methods.getReflectionBalances().call({from: signedInAddress})\r\n            const bnb = web3.utils.fromWei(reflectionBalances, 'ether')\r\n            setBalance(bnb);\r\n        }\r\n\r\n        setBalance(null);\r\n        fetchRewards();\r\n    }, [web3, signedInAddress, contracts])\r\n\r\n    const claimRewards = async () => {\r\n        if (!web3) {\r\n            return;\r\n        }\r\n\r\n        setStatus({\r\n            inProgress: true\r\n        })\r\n\r\n        const contractJson = contracts[props.contract];\r\n\r\n        try {\r\n            const contract = new web3.eth.Contract(contractJson.abi, contractJson.address)\r\n            const tx = await contract.methods.claimRewards();\r\n            const data = tx.encodeABI();\r\n            const gas = await tx.estimateGas({from: signedInAddress});\r\n            const gasPrice = await web3.eth.getGasPrice();       \r\n            const nonce = 0x00;\r\n            const transcationConfig: TransactionConfig = {\r\n                from: signedInAddress,\r\n                to: contractJson.address,\r\n                gas: gas,\r\n                gasPrice: gasPrice,\r\n                data: data,\r\n                chainId: 0x38,\r\n            }\r\n    \r\n            const receipt = await web3.eth.sendTransaction(transcationConfig);\r\n            setStatus({\r\n                receipt: receipt\r\n            })\r\n        } catch (e: any) {\r\n            setStatus({\r\n                error: e.message\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    if (status.inProgress) {\r\n        return (\r\n            <div className=\"reward-info\">\r\n                Claiming reward... <Spinner></Spinner>\r\n            </div>    \r\n        )\r\n    } else if (status.receipt) {\r\n        return (\r\n            <div className=\"reward-info\">\r\n                Rewards have been claimed.\r\n                <a href={txLink(status.receipt.transactionHash)} rel=\"noreferrer\" target=\"_blank\">View transaction</a>\r\n            </div>    \r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"reward-info\">\r\n                <div>{props.title}</div>\r\n                <div>{balance} BNB</div>\r\n                <Button className=\"button\" onClick={ claimRewards }\r\n                >Claim</Button>\r\n\r\n                { status.error ? <div className='claim-reward-error'>{status.error}</div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport function ClaimRewardsModal(props: any) {\r\n    const { web3, signedInAddress, contracts } = useContext(Web3Context)\r\n\r\n    return (\r\n        <Popup  \r\n            modal\r\n            nested\r\n            trigger={\r\n                ({...props.children})\r\n            }> \r\n            {(close: any) => (<div className=\"modal claim-rewards-modal\">\r\n                \r\n                <div className=\"modal\">\r\n                    <Button className=\"button--modal-close\" onClick={close}>&times;</Button>\r\n                    <h2>Rewards have been discontinued</h2>\r\n                    <div className=\"content\">\r\n                    It has been discovered that there are legal issues with SEC classifications of securities on NFT projects that give reflections which would put our project in jeopardy, so ShitPunks has found a new way to get the rewards to our community. The rewards now sent to the ShitPunks DAO for community use there! Head over to our Discord server, which is where the DAO is located.\r\n                    </div>\r\n                    <div className=\"section-claim\">\r\n                        <ClaimRewardsButton contract=\"shitpunks\" title=\"Token rewards\"/>\r\n                        <ClaimRewardsButton contract=\"shitmarket\" title=\"Marketplace rewards\"/>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </Popup>)\r\n}\r\n","import { useContext, useRef, useState } from \"react\";\r\nimport { Web3Context } from \"../../contexts/Web3Context\";\r\nimport Popup from 'reactjs-popup'\r\nimport { ClaimRewardsModal } from \"./ClaimRewardsModal\";\r\nimport Button from \"../widgets/Button\";\r\n\r\nexport function WalletModal(props) {\r\n    const {signedInAddress, disconnect} = useContext(Web3Context)\r\n    let [didCopyAddress, setDidCopyAddress] = useState(false)\r\n\r\n    const copyToClipboard = () => {\r\n        setDidCopyAddress(true)\r\n        navigator.clipboard.writeText(signedInAddress);\r\n        setTimeout(props.close, 400);\r\n    }\r\n\r\n    const ref: any = useRef();\r\n\r\n    return (\r\n        <div className=\"wallet-popup\">\r\n            <Button className=\"button button button-wallet\" onClick={copyToClipboard}>\r\n                &nbsp;{didCopyAddress ? <>Copied!</> : \r\n                (\r\n                    <><i className=\"fas fa-clipboard\" />&nbsp;Copy address</>\r\n                )}\r\n            </Button>\r\n            <ClaimRewardsModal closeParent={props.close}>\r\n                <Button className=\"button button button-wallet\" onClick={() => {\r\n                    console.log(\"closing parent\")\r\n                }}>\r\n                    <i className=\"fas fa-hand-holding-usd\" />&nbsp;Claim rewards\r\n                </Button>\r\n            </ClaimRewardsModal>\r\n            \r\n            <Button className=\"button button button-wallet button--danger\" onClick={disconnect}>\r\n                <i className=\"fas fa-sign-out-alt\" />&nbsp;Disconnect\r\n            </Button>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport function WalletModalTrigger(props: any) {\r\n    return (\r\n        <Popup  \r\n            nested\r\n            lockScroll={true}\r\n            position=\"bottom right\"\r\n            trigger={\r\n                ({...props.children})\r\n            }> \r\n            {(close: any) => (<WalletModal close={close}/>)\r\n        }\r\n    </Popup>)\r\n}\r\n\r\nexport default function Wallet() {\r\n    const {signedInAddress, signedInAddressShort, connect} = useContext(Web3Context)\r\n \r\n    if (signedInAddress.length > 0) {\r\n        return (\r\n            <WalletModalTrigger>\r\n                <div>\r\n                <Button className=\"button button-wallet button\"\r\n                >{signedInAddressShort}</Button>\r\n                </div>\r\n                \r\n            </WalletModalTrigger>\r\n            \r\n        )\r\n    } else {\r\n        return (\r\n            <Button className=\"button button-wallet\"\r\n                onClick={connect}\r\n                >Connect wallet</Button>\r\n        )\r\n    }\r\n    \r\n}","import MainMenu from \"../topbar/MainMenu\";\r\nimport Wallet from \"../topbar/Wallet\";\r\n\r\nexport default function TopBar() {\r\n    return (\r\n        <div className=\"top-bar\">\r\n            <div id=\"shitpunks-brand\">\r\n                <img id=\"shitpunks-logo\" src=\"/images/logo.png\"/>\r\n                <div id=\"shitpunks-title\"><a href=\"/home\">ShitPunks<span>.</span></a></div>\r\n            </div>\r\n            <MainMenu></MainMenu>\r\n            <div id=\"wallet\">\r\n                <Wallet></Wallet>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","export default function Input(props: any) {\r\n    const onChange = (ev) => {\r\n        if (props.onChange) {\r\n            props.onChange(ev.target.value);\r\n        }\r\n    }\r\n\r\n    const className = \"input-container \" + (props.className || \"\")\r\n\r\n    if (props.type == 'number') {\r\n        return (<div className={className}>\r\n            <input \r\n                placeholder=\"&nbsp;\"\r\n                className=\"input\" \r\n                onChange={onChange}\r\n                value={props.value}\r\n                type='number'\r\n                pattern=\"[0-9]*\" \r\n                inputMode=\"decimal\"\r\n            \r\n            ></input>    \r\n            <div className=\"placeholder\">{props.label}</div>\r\n        </div>\r\n    )\r\n    } else {\r\n        return (<div className={className}>\r\n            <input \r\n                placeholder=\"&nbsp;\"\r\n                className=\"input\" \r\n                onChange={onChange}\r\n                value={props.value}\r\n                type='text'\r\n            ></input>    \r\n            <div className=\"placeholder\">{props.label}</div>\r\n        </div>\r\n    )\r\n    }\r\n\r\n\r\n}\r\n","import {Img} from 'react-image'\r\nimport Spinner from '../widgets/Spinner';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useState, useContext } from 'react';\r\nimport { Web3Context } from \"../../contexts/Web3Context\"\r\nimport useAddressUtils from '../../hooks/AddressUtils';\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport TimeAgo from 'javascript-time-ago'\r\nimport en from 'javascript-time-ago/locale/en.json'\r\nTimeAgo.addLocale(en)\r\nconst timeAgo = new TimeAgo('en-US')\r\n\r\nconst getRarityImage = (rank) => {\r\n    if (rank < 100) {\r\n        return \"legendary\"\r\n    } else if (rank < 1000) {\r\n        return \"epic\"\r\n    } else if (rank < 2500) {\r\n        return \"rare\"\r\n    } else if (rank < 5000) {\r\n        return \"uncommon\"\r\n    } else {\r\n        return \"common\"\r\n    } \r\n}\r\n\r\nfunction UpdatedText(props) {\r\n\r\n    if (props.event == 'AskUpdate') {\r\n        if (props.prevListing > parseFloat(props.price)) {\r\n            return (<>\r\n                <span className=\"reduced\"><i className=\"fas fa-arrow-circle-down\"></i></span> from {props.prevListing} BNB\r\n            </>)\r\n        } else {\r\n            return (<>\r\n                <span className=\"increased\"><i className=\"fas fa-arrow-circle-up\"></i></span> from {props.prevListing} BNB\r\n            </>)\r\n        }\r\n    } else if (props.event == 'AskNew' || props.event == 'ListingCreated') {\r\n        return \"Listed \"\r\n    } if (props.event == 'Trade' || props.event == 'Sale') {\r\n        return \"Sold \"\r\n    } else {\r\n        return \"Updated \";\r\n    }\r\n    \r\n}\r\n\r\nexport default function PunkCard(props) {\r\n    const {web3, contracts} = useContext(Web3Context)\r\n    const [showFront, setShowFront] = useState(true);\r\n    const { formatDate, formatAddress, formatAddressMini, addressLink, walletLink } = useAddressUtils();\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n\r\n    const metadata = props.metadata;\r\n    const rarityImage = '/images/ranks/' + getRarityImage(metadata.rank) +'.png';\r\n    const punkImage = metadata.image; // \r\n    //const punkImage = 'http://www.deelay.me/300000/http://placehold.it/500x500'\r\n\r\n    const location = useLocation();\r\n\r\n    const updatedAt = props.timestamp ? timeAgo.format(props.timestamp) : null;\r\n\r\n\r\n    const marketplaceText = () => {\r\n        if (props.marketplace == 'pcs') {\r\n            return \"PancakeSwap\";\r\n        } else {\r\n            return \"ShitMarket\"\r\n        }\r\n    }\r\n\r\n    const marketplaceImage = (() => {\r\n        switch (props.marketplace) {\r\n            case \"shitmarket\":\r\n                return \"/images/poop-black.png\"\r\n            case \"pcs\":\r\n                return \"/images/pcs_icon.png\"\r\n            default:\r\n                return null;\r\n        }\r\n    })();\r\n\r\n    const flipCard = () => {\r\n        setShowFront(!showFront);\r\n    }\r\n\r\n    return (\r\n        <div className=\"punk-card\">\r\n            <div className={\"punk-card-side punk-card-back\" + (showFront ? \"\" : \" punk-card-back--visible\")}>\r\n\r\n                <div className=\"image-and-seller\">\r\n                    <div className=\"punk-image-container\">\r\n                    <Img className=\"punk-image\" \r\n                        src={punkImage}\r\n                        loader={<Spinner/>}\r\n                        container={(children) => {\r\n                            return (\r\n                                <div className='punk-image-wrapper'>\r\n                                    {children}\r\n                                </div>\r\n                            )\r\n                        }}\r\n                    />    \r\n                    </div>\r\n\r\n                    <div>\r\n                        { (props.seller \r\n                            && props.seller != '0x'\r\n                            && !props.seller.startsWith('0x00000000')\r\n                        ) ? (\r\n                            <>\r\n                                <div className=\"punk-card-back-item-label\">Seller</div>\r\n                                <div className=\"punk-card-back-item-value\">\r\n                                    {walletLink(props.seller)}\r\n                                    <a href={addressLink(props.seller)}>{formatAddressMini(props.seller)}</a>\r\n                                </div>\r\n                            </>\r\n                        ) : null }\r\n\r\n                        { (props.buyer \r\n                            && props.buyer != '0x'\r\n                            && !props.buyer.startsWith('0x00000000')\r\n                        ) ? (\r\n                            <>\r\n                                <div className=\"punk-card-back-item-label\">Buyer</div>\r\n                                <div className=\"punk-card-back-item-value\">\r\n                                    {walletLink(props.buyer)}\r\n                                    <a href={addressLink(props.buyer)}>{formatAddressMini(props.buyer)}</a>\r\n                                </div>\r\n                            </>\r\n                        ) : null }\r\n               \r\n                 \r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"punk-card-back-item-label\">Attributes</div>\r\n                <div className=\"punk-card-back-attribute-list\">\r\n                    {metadata.attributes.map(attr => {\r\n                        const isSelected = searchParams.get(attr.trait_type) === attr.value;\r\n                        return (<div key={attr.trait_type} onClick={() => {\r\n                            const params = searchParams;\r\n                            if (isSelected) {\r\n                                params.delete(attr.trait_type);\r\n                            } else {\r\n                                params.set(attr.trait_type, attr.value)\r\n                            }\r\n                            \r\n                            setSearchParams(params, { replace: false });\r\n                        }}\r\n                         className={\"punk-card-back-attribute-item\" + (isSelected ? \" punk-card-back-attribute-item--selected\" : \"\")}>\r\n                            <div className=\"punk-card-back-trait-type\">{attr.trait_type}</div>\r\n                            <div className=\"punk-card-back-trait-value\">{attr.value}</div>\r\n                        </div>)\r\n                    })}\r\n                </div>\r\n                \r\n                \r\n                <div className=\"dogear\" onClick={flipCard}>\r\n                    <div className=\"triangle-bottomright triangle-bottomright--back\"></div> \r\n                </div>\r\n            </div>\r\n            <div className={\"punk-card-side punk-card-front\" + (showFront ? \" punk-card-front--visible\" : \"\")}>\r\n            <a href={\"/token/\"+props.metadata.tokenId}>\r\n            <div className=\"punk-image-container\">\r\n                <Img className=\"punk-image\" \r\n                    src={punkImage}\r\n                    loader={<Spinner/>}\r\n                    container={(children) => {\r\n                        return (\r\n                            <div className='punk-image-wrapper'>\r\n                                {children}\r\n                            </div>\r\n                        )\r\n                    }}\r\n                />             \r\n                <img className='punk-card-rarity' src={rarityImage} alt='Rarity'></img>\r\n                \r\n                { (metadata.attributes.length <= 2 || metadata.attributes.length >= 6) ? (\r\n                    <div className='punk-card-attrcount'>{metadata.attributes.length-1} attr</div>\r\n                ) : null }\r\n                {(marketplaceImage && marketplaceImage.length > 0) ? (<img className=\"punk-card-marketplace-image\" src={marketplaceImage}></img>) : null}\r\n            </div>\r\n            </a>\r\n            \r\n              \r\n             <div className=\"punk-details\">\r\n                <div className=\"punk-name\">\r\n                    {metadata.name}\r\n                </div>\r\n\r\n{\r\n    /*\r\n      <ConnectWrapper connectText=\"Connect wallet to buy\">\r\n                    <BuyPunkModal \r\n                        onClose={() => {\r\n                            //setTradeHistorySalt(tradehistorySalt + 1);\r\n                            //fetchOwner()\r\n                        }}\r\n                        metadata={metadata} \r\n                        tokenId={metadata.tokenId}\r\n                        price={props.price}\r\n                        sellInfo={{\r\n                            marketplace: props.marketplace\r\n                        }}\r\n                    >\r\n                        <Button className=\"button\">Buy</Button>\r\n                    </BuyPunkModal>\r\n                </ConnectWrapper>\r\n    */\r\n}\r\n              \r\n\r\n                <div className=\"punk-statrow\">\r\n                    <div className=\"punk-stat\">\r\n                        <div className=\"punk-stat-title\">Token&nbsp;id</div>\r\n                        <div className=\"punk-stat-value\">{metadata.tokenId}</div>\r\n                    </div>\r\n                    <div className=\"punk-stat\">\r\n                        <div className=\"punk-stat-title\">Rank</div>\r\n                        <div className=\"punk-stat-value\">{metadata.rank}</div>\r\n                    </div>\r\n                    <div className=\"punk-stat\">\r\n                        <div className=\"punk-stat-title\">Price</div>\r\n                        <div className=\"punk-stat-value\">\r\n                            {props.price ? (\r\n                                <>\r\n                                    <img className=\"bnb-icon\" src=\"/images/bnb_icon.png\" />{props.price}\r\n                                </>\r\n                            ) : (<>–</>) }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                { updatedAt ? (\r\n                    <div className=\"punk-timestamp\">\r\n                        { UpdatedText(props) }<br/>{updatedAt}\r\n                    </div>\r\n                ) : null}               \r\n             </div>\r\n\r\n                    <div className=\"dogear\" onClick={flipCard}>\r\n                        <div className=\"triangle-bottomright\"></div> \r\n                    </div>\r\n                \r\n            </div>\r\n\r\n            \r\n \r\n        </div>\r\n    )\r\n}","import PunkCard from \"./PunkCard\";\r\nimport Spinner from \"../widgets/Spinner\";\r\n\r\nexport default function PunkCardList(props) {\r\n    const className = `punk-card-list punk-card-list-${props.classSuffix}`\r\n    if (props.loading) {\r\n        return (\r\n            <div className={`${className} punk-card-list--loading`}>\r\n                <Spinner></Spinner>\r\n            </div>\r\n        )\r\n    } \r\n    \r\n    return (\r\n        <>\r\n            <div className=\"num-results\">{props.total} Results</div>\r\n            <div className={`${className}`}>\r\n                {props.tokens.map(token => (<PunkCard key={token.metadata.tokenId} {...token}></PunkCard>))}\r\n            </div>\r\n        </>\r\n    )\r\n}","import Select from 'react-select'\r\n\r\nconst colourStyles = {\r\n    control: (styles: any) => ({ \r\n        ...styles, \r\n        backgroundColor: 'transparent',\r\n        border: 'none !important',\r\n        boxShadow: 'none',\r\n        color: 'white',\r\n        paddingLeft: \"1rem\",\r\n        cursor: \"pointer\",\r\n    }),\r\n    option: (styles: any, {}) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: 'white',\r\n            color: 'black'\r\n        }\r\n    },\r\n    singleValue: (styles: any, {}) => ({\r\n        ...styles,\r\n        color: 'rgb(255, 122, 0)'\r\n    }),\r\n    placeholder: (styles: any, {}) => ({\r\n        ...styles,\r\n        margin: 0,\r\n        color: \"white\",\r\n        fontFamily: \"Poppins, sans-serif\"\r\n    }),\r\n    valueContainer: (styles: any, {}) => ({\r\n        ...styles,\r\n        padding: 0\r\n    }),\r\n    dropdownIndicator: (styles: any, {}) => ({\r\n        ...styles,\r\n        color: '#666',\r\n        paddingLeft: '1.5rem'\r\n    })    \r\n}\r\n\r\nexport default function SelectField(props) {\r\n \r\n    const CustomOption = (optionProps: any) => {\r\n        const countDiv = optionProps.data.count != undefined ? (<div className='count'>{(optionProps.data.count / 100).toFixed(2)}%</div>) : (<div></div>)\r\n        const floorDiv = optionProps.data.floor != undefined ? (<div className='floor'>\r\n            <img className=\"bnb-icon\" src=\"/images/bnb_icon.png\" />{optionProps.data.floor}\r\n        </div>) : (<div></div>)\r\n        return (\r\n            <div className=\"select-option\" {...optionProps.innerProps}>\r\n                <div className='label'>{optionProps.data.label}</div>\r\n                {props.showFloorPrices ? floorDiv : null}\r\n                {!props.showFloorPrices ? countDiv : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleChange = (event: any) => {\r\n        props.onChange({\r\n            type: props.name,\r\n            value: event ? event.value : null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Select \r\n            className=\"select-control\"\r\n            classNamePrefix=\"select-control\"\r\n            name={props.name}\r\n            isClearable={props.isClearable}\r\n            components={{\r\n                IndicatorSeparator: () => null,\r\n                Option: CustomOption\r\n            }}\r\n            placeholder={props.placeholder}\r\n            options={props.options} \r\n            styles={colourStyles}\r\n            //defaultValue={this.getOptionByValue(this.state.selected)}\r\n            defaultValue={props.defaultValue}\r\n            onChange={handleChange}\r\n        />\r\n    )\r\n}","export default function IconButton(props) {\r\n    const className = \"icon-button \" + (props.className || \"\")\r\n    return (\r\n        <button \r\n            className={className}\r\n            onClick={props.onClick}\r\n        ><i className={props.iconClass}></i>\r\n        {props.children}\r\n        </button>    \r\n    )\r\n}","import SelectField from \"./widgets/SelectField\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport IconButton from \"./widgets/IconButton\";\r\n\r\nexport default function PunkSearchBar(props) {\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const priceSortOptions = [\r\n        {\r\n            label: 'Price: Low to high',\r\n            value: 'price-low'\r\n        },\r\n        {\r\n            label: 'Price: High to low',\r\n            value: 'price-high'\r\n        }\r\n    ]\r\n\r\n    const rankSortOptions = [\r\n        {\r\n            label: 'Rank: Low to high',\r\n            value: 'rank-low'\r\n        },\r\n        {\r\n            label: 'Rank: High to low',\r\n            value: 'rank-high'\r\n        }\r\n    ]\r\n\r\n    const modeSpecificSortOptions = {\r\n        activity: [\r\n            {\r\n                label: \"Recently sold\",\r\n                value: 'time'\r\n            },\r\n            ...priceSortOptions,\r\n            ...rankSortOptions\r\n        ],\r\n        forsale: [\r\n            {\r\n                label: \"Recently listed\",\r\n                value: 'time'\r\n            },\r\n            ...priceSortOptions,\r\n            ...rankSortOptions\r\n        ],\r\n        all: [\r\n            ...rankSortOptions,\r\n            {\r\n                label: 'Token id: Low to high',\r\n                value: 'tokenId-low'\r\n            },\r\n            {\r\n                label: 'Token id: High to low',\r\n                value: 'tokenId-high'\r\n            }\r\n        ]\r\n    }\r\n\r\n    const sortOptions = props.sortOptions || [\r\n        ...modeSpecificSortOptions[props.marketplaceMode],\r\n    ]\r\n\r\n    const filters = [\"Type\", \"Hat-Hair\", \"Eyes\", \"Ears\", \"Mouth\", \"Mouth Accessory\", \"Beard\", \"Face\", \"Nose\", \"Lip\", \"Neck\", \"rank\"]\r\n    let numFilters = 0;\r\n    for (const [key, value] of searchParams) {\r\n        if (filters.includes(key)) {\r\n            numFilters++;\r\n        }\r\n    }\r\n\r\n    // price=high/low\r\n\r\n    //const className = `punk-search-bar ` + (props.visible ? \"punk-search-bar--visible\" : \"\")\r\n\r\n    const sortChanged = (event) => {\r\n        let params = searchParams;\r\n        if (event.value == null ||\r\n            event.value == 'time') {\r\n            params.delete('sort')\r\n        } else {\r\n            params.set('sort', event.value);\r\n        }\r\n        \r\n        setSearchParams(params, { replace: false })\r\n    }\r\n\r\n    const getDefaultSort = () => {\r\n        if (props.defaultSort) {\r\n            return props.defaultSort;\r\n        }\r\n        if (props.marketplaceMode == \"all\") {\r\n            return sortOptions[1];\r\n        }\r\n        return sortOptions[0];\r\n    }\r\n\r\n    const selectedSort = searchParams.get('sort')\r\n    const sortDefaultValue = sortOptions.find(opt => opt.value == selectedSort) || getDefaultSort();\r\n    \r\n    return (\r\n        <div className=\"punk-search-bar\">\r\n            <span style={{display: \"flex\", gap: \"1rem\"}}>\r\n            <IconButton className=\"filter-button\" iconClass=\"fas fa-filter\" onClick={props.showFilters}>\r\n                { numFilters > 0 ? (\r\n                    <div className=\"filters-button-badge\">{numFilters}</div>\r\n                ) : null}\r\n            </IconButton>\r\n            <IconButton className=\"\" iconClass=\"fas fa-sync\" onClick={props.refresh}/>\r\n            </span>\r\n\r\n            <SelectField\r\n                name=\"sort\" \r\n                options={sortOptions}\r\n                defaultValue={sortDefaultValue}\r\n                onChange={sortChanged}\r\n            ></SelectField>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext } from 'react';\r\nimport { Web3Context } from '../../contexts/Web3Context';\r\nimport Button from './Button';\r\n\r\nexport default function ConnectWrapper(props) {\r\n    const {signedInAddress, connect} = useContext(Web3Context)\r\n\r\n    if (signedInAddress && signedInAddress.length) {\r\n        return (\r\n            {...props.children}\r\n        )\r\n    } else {\r\n        return (\r\n            <Button className=\"button\" onClick={connect}>{props.connectText || 'Connect'}</Button>\r\n        )\r\n    }\r\n    \r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Web3Context } from \"../contexts/Web3Context\";\r\nimport Button from \"./widgets/Button\";\r\nimport axios from 'axios';\r\nimport Spinner from \"./widgets/Spinner\";\r\nimport ConnectWrapper from \"./widgets/ConnectWrapper\";\r\n\r\nconst getDiscordAuthUri = (action: string) => {\r\n    const clientId = \"927305299466018836\";\r\n    \r\n    const redirectUri = `${window.location.origin}/collection?diamondhands=${action}`;\r\n    return `https://discord.com/api/oauth2/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code&scope=identify`;\r\n}\r\n\r\nconst connectDiscord = (action: string) => {\r\n    window.location.href = getDiscordAuthUri(action);\r\n}\r\n\r\nfunction DiamondHandsCriterias(props) {\r\n    const { criterias } = props.status;\r\n    criterias[0].description = \"Link wallet with Discord id by clicking the button\"\r\n    criterias[2].description = \"All ShitPunks unlisted or listed at 0.5 or above\"\r\n    return (\r\n        <div className=\"diamond-criterias\">\r\n            { criterias.map((criteria, index) => {\r\n                return (\r\n                    <div className=\"criteria\">\r\n                        { criteria.value ? (\r\n                            <i className=\"criteria-icon fas fa-check-circle\"></i>\r\n                        ) : (\r\n                            <i className=\"criteria-icon fas fa-times-circle\"></i>\r\n                        )}\r\n                        \r\n                        <div className=\"criteria-description\">\r\n                        {criteria.description} {index == 0 ? <span className=\"dmd-button-right\"></span> : null}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                )\r\n            }) }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nfunction DiamondHandsExtraInfo(props) {\r\n    const [isVisible, setVisible] = useState(!props.status.linked);\r\n\r\n    return (\r\n        <div className=\"diamond-hands-extra-info\">\r\n            <div className=\"diamond-hands-title text-accent\"><i className=\"fas fa-gem\"></i>&nbsp;\r\n                { props.status.linked ? (\r\n                    <>You have got</>\r\n                ) : (\r\n                    <>You can apply for</>\r\n                ) }\r\n            &nbsp;\r\n                <div className={`read-more-toggle ${isVisible ? \"read-more-toggle--visible\" : \"\"}`} onClick={() => { setVisible(!isVisible) }}>\r\n                    Diamond Hands!\r\n                </div>\r\n            </div>\r\n            \r\n            <div className={`read-more-contents ${isVisible ? \"read-more-contents--visible\" : \"\"}`}>\r\n                The Diamond Hands program is a special designation for our most loyal holders with \r\n                the goal of continually raising the floor for our collection and providing additional \r\n                value to our holders. Entry into the program requires a listing price of no lower \r\n                than 0.5 BNB on any ShitPunk in your wallet. \r\n                <br></br><br></br>\r\n                Admission to the program provides a special role in <a target=\"_blank\" href=\"https://discord.gg/ShitPunks\">Discord</a>, as well as entry in a lottery drawing for monthly airdrops.\r\n                <br/>\r\n                { props.status.linked ? (\r\n                    <a href={getDiscordAuthUri('leave')}>\r\n                        Leave Diamonds Hands Program\r\n                    </a>\r\n                ) : null}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport function DiamondHands(props) {   \r\n\r\n    const diamondHandsApi = \"https://acy9375pq6.execute-api.us-east-1.amazonaws.com/diamondhands\";\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const {signedInAddress} = useContext(Web3Context)\r\n    const [fetchStatusSalt, setFetchStatusSalt] = useState(0);\r\n    const [linkStatus, setLinkStatus] = useState<any>({\r\n        pending: true\r\n    });\r\n\r\n    const hasWallet = signedInAddress.length > 0;\r\n\r\n    useEffect(() => {\r\n        if (!hasWallet) {\r\n            return;\r\n        }\r\n        \r\n        fetch(`${diamondHandsApi}?action=status&wallet=${signedInAddress}`).then(async res => {\r\n            const json = await res.json();\r\n            if (json.pending) {\r\n                setTimeout(() => {\r\n                    setFetchStatusSalt(fetchStatusSalt + 1);\r\n                }, 1000);\r\n            }\r\n\r\n            console.log(\"setting status\", json);\r\n            setLinkStatus(json.status);\r\n        })\r\n\r\n    }, [hasWallet, signedInAddress, fetchStatusSalt])\r\n\r\n    const discordCode = searchParams.get('code');\r\n    const diamondhandsAction = searchParams.get('diamondhands');\r\n\r\n    useEffect(() => {\r\n        if (!discordCode || !hasWallet) {\r\n            return;\r\n        }\r\n\r\n        const apiFunc = diamondhandsAction == \"register\" ? \"register\" : \"leave\";\r\n        const apiUri = `${diamondHandsApi}?action=${apiFunc}&code=${discordCode}&wallet=${signedInAddress}`;\r\n        axios.get(apiUri).then(res => {\r\n            console.log(\"Register res\", res);\r\n        })\r\n    }, [discordCode, signedInAddress, hasWallet, diamondhandsAction])\r\n\r\n    if (!hasWallet) {\r\n        return (\r\n            <ConnectWrapper connectText=\"Connect wallet\"></ConnectWrapper>\r\n        )\r\n    } else if (linkStatus.pending) {\r\n        return (\r\n            <div className=\"diamond-hands-container\">\r\n                <Spinner></Spinner>\r\n            </div>\r\n        )\r\n    } else if (false && linkStatus.linked) {\r\n        return (\r\n            <div className=\"diamond-hands-container\">\r\n                <DiamondHandsExtraInfo status={linkStatus} connectDiscord={connectDiscord}></DiamondHandsExtraInfo>\r\n                { linkStatus.criterias ? (\r\n                    <DiamondHandsCriterias status={linkStatus}></DiamondHandsCriterias>\r\n                ) : null }\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"diamond-hands-container\">\r\n                <DiamondHandsExtraInfo \r\n                    status={linkStatus}\r\n                ></DiamondHandsExtraInfo>\r\n                { linkStatus.criterias ? (\r\n                    <DiamondHandsCriterias status={linkStatus}></DiamondHandsCriterias>\r\n                ) : null }\r\n                <Button className=\"button\"\r\n                    onClick={() => { connectDiscord(\"register\") }}\r\n                >\r\n                    Join Diamonds Hands program\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import { useContext, useEffect } from \"react\";\r\nimport Input from \"./widgets/Input\";\r\nimport { useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Web3Context } from \"../contexts/Web3Context\";\r\nimport PunkCardList from \"./punk-card/PunkCardList\";\r\nimport PunkSearchBar from \"./PunkSearchBar\";\r\nimport { DiamondHands } from \"./DiamondHands\";\r\n\r\nconst fetchFromPancake = async (web3, signedInAddress, contract_pcs) => {\r\n    if (!web3) {\r\n        return [];\r\n    }\r\n    const contract = new web3.eth.Contract((contract_pcs as any).abi, contract_pcs.address)\r\n    const asks = await contract.methods.viewAsksByCollectionAndSeller(\"0x11304895f41C5A9b7fBFb0C4B011A92f1020EF96\", signedInAddress, 0, 500).call()\r\n    return asks.tokenIds.map((tokenId, index) => {\r\n        return {\r\n            seller: asks.askInfo[index].seller,\r\n            price: web3.utils.fromWei(asks.askInfo[index].price, 'ether'),\r\n            tokenId: tokenId,\r\n            marketplace: \"pcs\"\r\n        }\r\n    });\r\n}\r\n\r\nconst fetchFromToken = async (web3, signedInAddress, contractJson: any) => {\r\n    if (!web3) {\r\n        return [];\r\n    }\r\n   \r\n    try {\r\n        const contract = new web3.eth.Contract(contractJson.abi, contractJson.address)\r\n        const balance = parseInt(await contract.methods.balanceOf(signedInAddress).call())\r\n        if (balance == 0) {\r\n            return []\r\n        }\r\n  \r\n        const range = [...Array(balance).keys()];\r\n        let assetIds = await Promise.all(range.map(async i => {\r\n            const assetId = await contract.methods.tokenOfOwnerByIndex(signedInAddress, i).call()\r\n            return {\r\n                tokenId: assetId\r\n            }\r\n        }))\r\n\r\n        return assetIds;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return [];\r\n    }\r\n  }\r\n\r\n\r\n  const sortTokens = (searchParams, tokens) => {\r\n    const secondarySort = (firstSortValue, a, b) => {\r\n        if (firstSortValue == 0) {\r\n            return a.metadata.rank - b.metadata.rank;\r\n        } else {\r\n            return firstSortValue;\r\n        }\r\n    }\r\n    \r\n    const sortMode = searchParams.get('sort')\r\n    return tokens.sort((a, b) => {\r\n        if (sortMode == 'price-low') {\r\n            const priceA = parseFloat(a.price) || Number.MAX_VALUE;\r\n            const priceB = parseFloat(b.price) || Number.MAX_VALUE;\r\n            return secondarySort(priceA - priceB, a, b);\r\n        } else if (sortMode == 'price-high') {\r\n            const priceA = parseFloat(a.price) || 0;\r\n            const priceB = parseFloat(b.price) || 0;\r\n            return secondarySort(priceB - priceA, a, b);\r\n        } else if (sortMode == 'attributeCountLow') {\r\n            return secondarySort(a.metadata.attributes.length - b.metadata.attributes.length, a, b);\r\n        } else if (sortMode == 'attributeCountHigh') {\r\n            return secondarySort(-(a.metadata.attributes.length - b.metadata.attributes.length), a, b);\r\n        } else if (sortMode == 'rank-low') {\r\n            return secondarySort(b.metadata.rank - a.metadata.rank, a, b);\r\n        } else if (sortMode == 'rank-high') {\r\n            return secondarySort(a.metadata.rank - b.metadata.rank, a, b);\r\n        }\r\n        return secondarySort(0, a, b);\r\n    });\r\n}\r\n\r\nexport default function Collection() {\r\n    const [walletId, setWalletId] = useState(\"\")\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState<any>(null)\r\n    const [invalidAddress, setInvalidAddress] = useState(false)\r\n    const [inventory, setInventory] = useState<any>({tokens: []});\r\n    const {web3, signedInAddress, contracts} = useContext(Web3Context)\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [refreshSalt, setRefreshSalt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (searchParams.has('wallet')) {\r\n            const address = searchParams.get('wallet')\r\n            setWalletId(address || \"\");\r\n        } else {\r\n            setWalletId(signedInAddress)\r\n        }\r\n    }, [searchParams, signedInAddress])\r\n\r\n    useEffect(() => {\r\n        if (!contracts.fetched) {\r\n            return;\r\n        }\r\n\r\n        const fetchTokens = async () => {\r\n            console.log(\"fetching tokens\", walletId, web3);\r\n            setError(null);\r\n\r\n            setLoading(true);\r\n            setInventory({tokens: []});\r\n\r\n            if (web3 && web3.utils.isAddress(walletId)) {\r\n                setInvalidAddress(false);\r\n\r\n                const res = await Promise.all([\r\n                    fetchFromPancake(web3, walletId, contracts.pcs),\r\n                    fetchFromToken(web3, walletId, contracts.shitpunks),\r\n                    fetchFromToken(web3, walletId, contracts.shitpunks2),\r\n                ]).catch(err => {\r\n                    console.log(\"fetch error\", err);\r\n                })\r\n\r\n                if (!res) {\r\n                    setError(\"Network error\");\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                const notOnPcsIds = [...res[1], ...res[2]]\r\n                const contractShitMarket = new web3.eth.Contract((contracts.shitmarket as any).abi, contracts.shitmarket.address)\r\n                const notOnPcs = await Promise.all(notOnPcsIds.map(async tokenInfo => {\r\n                    const listing = await contractShitMarket.methods.getListing(tokenInfo.tokenId).call()\r\n                    const forSale = listing[4] && listing[0].toLowerCase() == walletId.toLowerCase();\r\n                    const listingInfo = forSale ? {\r\n                        seller: listing[0],\r\n                        buyer: listing[1],\r\n                        price: web3.utils.fromWei(listing[3], 'ether'),\r\n                        marketplace: \"shitmarket\"\r\n                    } : {}\r\n                    return {\r\n                        tokenId: tokenInfo.tokenId,\r\n                        ...listingInfo\r\n                    }\r\n                }))\r\n                \r\n                const tokenList = [...res[0], ...notOnPcs]\r\n                if (tokenList.length == 0) {\r\n                    setInventory({\r\n                        tokens: []\r\n                    })\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n\r\n                const balances = await Promise.all(tokenList.map(async token => {\r\n                    const tokenId = token.tokenId;\r\n                    const bal = await contractShitMarket.methods.getReflectionBalance(tokenId).call()\r\n                    return parseFloat(web3.utils.fromWei(bal, 'ether'));\r\n                })).catch(err => {\r\n                })\r\n\r\n                if (!balances) {\r\n                    setError(\"Network error\");\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                const totalBal = balances.reduce((acc, cur) => acc +cur, 0)\r\n                console.log(\"total\", totalBal);\r\n                \r\n\r\n                const tokenIdsString = tokenList.map(token => token.tokenId).join(',')\r\n                try {\r\n                    const metaDataBlob = await fetch(`https://acy9375pq6.execute-api.us-east-1.amazonaws.com/shitPunks2?indices=${tokenIdsString}`)\r\n                    const metaDataJson: any[] = await metaDataBlob.json();\r\n                    const withTokenId = metaDataJson.map((metadata, index) => {\r\n                        return {\r\n                            metadata: {\r\n                                ...metadata,\r\n                                tokenId: tokenList[index].tokenId\r\n                            },\r\n                            ...tokenList[index]\r\n                        }\r\n                    }).sort((a,b) => a.metadata.rank - b.metadata.rank);\r\n                    setInventory({tokens: sortTokens(searchParams, withTokenId)});\r\n                    setLoading(false);\r\n                } catch (e) {\r\n                    setLoading(false);\r\n                    setError(\"Network error\");\r\n                }\r\n                \r\n\r\n            } else {\r\n                setLoading(false);\r\n                setInvalidAddress(true);\r\n            }\r\n            \r\n        }\r\n        fetchTokens();\r\n    }, [contracts.fetched, walletId, contracts, web3, refreshSalt])\r\n\r\n    useEffect(() => {\r\n        setInventory({tokens: sortTokens(searchParams, inventory.tokens)});\r\n    }, [searchParams])\r\n\r\n    const sortOptions = [\r\n        {\r\n            label: 'Rank: Low to high',\r\n            value: 'rank-low'\r\n        },\r\n        {\r\n            label: 'Rank: High to low',\r\n            value: 'rank-high'\r\n        },\r\n        {\r\n            label: 'Attribute count: Low to high',\r\n            value: 'attributeCountLow'\r\n        },\r\n        {\r\n            label: 'Attribute count: High to low',\r\n            value: 'attributeCountHigh'\r\n        },\r\n        {\r\n            label: 'Price: Low to high',\r\n            value: 'price-low'\r\n        },\r\n        {\r\n            label: 'Price: High to low',\r\n            value: 'price-high'\r\n        }\r\n    ]\r\n\r\n    const walletInputChanged = (address) => {\r\n        setSearchParams({\r\n            wallet: address\r\n        }, {\r\n            replace: true\r\n        })\r\n    }\r\n\r\n    return (<div className=\"page page-collection\">\r\n        <h1>Collection<span>.</span></h1>\r\n\r\n        { signedInAddress.length > 0 && signedInAddress === walletId ? (\r\n            <DiamondHands></DiamondHands>\r\n        ) : null}\r\n        \r\n        <div className=\"collection-input\">\r\n            <Input label={\"Wallet address\"} value={walletId}\r\n                onChange={walletInputChanged}\r\n            ></Input>\r\n\r\n            { invalidAddress ? (\r\n                <div>Invalid address</div>\r\n            ) : null }\r\n        </div>\r\n\r\n        { invalidAddress ? null : (\r\n            <>\r\n            <PunkSearchBar \r\n                sortOptions={sortOptions}\r\n                defaultSort={sortOptions[1]}\r\n                refresh={() => { setRefreshSalt(refreshSalt + 1)}}\r\n            />\r\n            <PunkCardList total={inventory.tokens.length} classSuffix={\"collection\"} tokens={inventory.tokens} loading={loading}></PunkCardList>\r\n            </>\r\n        )}\r\n\r\n        { error ? (\r\n            <div className=\"network-error\">Network error :( Please try again later.</div>\r\n        ) : null}\r\n    </div>)\r\n}\r\n","import VisibilitySensor from 'react-visibility-sensor'\r\n\r\nexport default function SocialLinks(props) {\r\n\r\n    const iconSize = \"\"\r\n\r\n    const links = [\r\n        { icon: iconSize+'fab fa-discord', title: 'Discord', link: 'https://discord.gg/ShitPunks' },\r\n        { icon: iconSize+'fab fa-twitter', title: 'Twitter', link: 'https://twitter.com/Shit_Punks' },\r\n        { icon: iconSize+'fab fa-telegram', title: 'Telegram', link: 'https://t.me/ShitPunksOfficial' },\r\n        { icon: iconSize+'fab fa-instagram', title: 'Instagram', link: 'https://instagram.com/Shit_Punks' },\r\n        //{ icon: iconSize+'fab fa-medium', title: 'Medium', link: 'https://shitpunks.medium.com/' },\r\n    ]\r\n\r\n    return (\r\n        <VisibilitySensor>\r\n            {({isVisible}) =>\r\n                <div className=\"social-icons\">\r\n                { links.map((item, index) => {\r\n                    return (\r\n                        <a rel=\"noreferrer\" target=\"_blank\" className={\"social-icon\" + (isVisible || true ? \" social-icon--animate\" : \"\")} style={{animationDelay: 0.2+(index*0.1) + 's'}} key={item.title} href={item.link}><i className={item.icon}></i></a>\r\n                    )\r\n                })}\r\n                </div>\r\n            }\r\n        </VisibilitySensor>\r\n    )\r\n    \r\n}","export default function SpeechBubble(props) {\r\n    const extraClassName = props.classSuffix ? \"speech-bubble--\" + props.classSuffix : \"\";\r\n    return (\r\n        <div className={\"speech-bubble \" + extraClassName}>\r\n            <span>{props.children}</span>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Random, MersenneTwister19937 } from 'random-js'\r\nimport SpeechBubble from './SpeechBubble';\r\nimport VisibilitySensor from 'react-visibility-sensor'\r\nimport Spinner from './widgets/Spinner';\r\n\r\nconst getRarityImage = (rank) => {\r\n    if (rank < 100) {\r\n        return \"legendary\"\r\n    } else if (rank < 1000) {\r\n        return \"epic\"\r\n    } else if (rank < 2500) {\r\n        return \"rare\"\r\n    } else if (rank < 5000) {\r\n        return \"uncommon\"\r\n    } else {\r\n        return \"common\"\r\n    } \r\n}\r\n\r\nconst SpeechBubbles = (props) => {\r\n    if (!props.isVisible) {\r\n        return (<></>)\r\n    }\r\n\r\n    const phrases = [\r\n        \"ShitPunks to the moon!\",\r\n        \"Shit Happens!\",\r\n        \"Shit just got real!\",\r\n        \"You’re THE SHIT!\",\r\n        \"I'm as cool as shit!\",\r\n        \"Watch out! Shit’s about to hit the fan!\"\r\n    ]\r\n    \r\n    return (\r\n        <div className=\"speech-bubbles\">\r\n            {[...Array(7)].map((x, index) => {\r\n                return (\r\n                    <SpeechBubble key={\"bubble\"+index} arrowPosition={.8} classSuffix={\"punk\" + (index+1)}>\r\n                        {phrases[index % phrases.length]}\r\n                    </SpeechBubble>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PunksOfTheDayText = (props) => {\r\n    if (!props.isVisible) {\r\n        return (<></>)\r\n    }\r\n\r\n    return (\r\n        <div className=\"punk-of-the-day-text\">\r\n            { \"Punks-of-the-day\".split('').map((letter, index) => {\r\n                return <span key={index} className={\"letter--\" + index}>{letter.replace('-', ' ')}</span>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PunksOfTheDayImages = (props) => {\r\n    const { punks, slope, imgSize} = props;\r\n\r\n    if (!props.isVisible) {\r\n        return (<></>)\r\n    }\r\n\r\n    return punks.map((punk, index) => {\r\n        const metadata = punk.metadata;\r\n        const punkLink = `/punk/${punks[index].tokenId}`;\r\n        const imageLink = `https://acy9375pq6.execute-api.us-east-1.amazonaws.com/shitPunkImage?index=${punks[index].metadata.id}`;\r\n        const rarityLink = `/images/ranks/${getRarityImage(metadata.rank)}.png`\r\n        return (\r\n        \r\n            <g key={punk.tokenId} className=\"punk-image-wrapper-outer\">\r\n                <g className={`punk-image-wrapper punk-image-wrapper--${index+1}`}>\r\n                    <a href={punkLink}>\r\n                        <image \r\n                            width={imgSize} \r\n                            height={imgSize} \r\n                            x={imgSize*index} \r\n                            y={slope*(7-index)} \r\n                            fill=\"none\" \r\n                            className={`punk-row-image2 punk-row-image2--${index+1}`}\r\n                            href={imageLink} \r\n                        />\r\n                    </a>\r\n                    <rect className=\"punk-image-overlay\" x={imgSize*index}  y=\"0\" width={imgSize} height={imgSize + slope*8} fill=\"white\"/>\r\n                    \r\n                </g>\r\n                <image className=\"punk-image-rank\" x={imgSize*index}  y={imgSize*3/7} width={imgSize/2} href={rarityLink}></image>\r\n            </g>\r\n        )\r\n    })\r\n}\r\n\r\nexport default function PunksRow(props) {\r\n    const midnight = new Date();\r\n    midnight.setHours(0,0,0,0);\r\n    const seed = midnight.getTime();\r\n\r\n    const [punks, setPunks] = useState<any[]>([])\r\n    const [isVisible, setVisible] = useState(false)\r\n    const [hasCachedImages, setHashCachedImages] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        const fetchTokens = async () => {\r\n            const random = new Random(\r\n                MersenneTwister19937.seed(midnight.getTime())\r\n            );\r\n            \r\n            const range = [...Array(7).keys()];\r\n            const tokenIds = range.map(() => {\r\n                const tokenId = random.integer(0, 9999);\r\n                return tokenId;\r\n            })\r\n\r\n            //const random2 = new Random();\r\n            //random2.shuffle(tokenIds);\r\n    \r\n            const metaDataBlob = await fetch(`https://acy9375pq6.execute-api.us-east-1.amazonaws.com/shitPunks2?indices=${tokenIds.join(',')}`)\r\n            const metaDataJson: any[] = await metaDataBlob.json();\r\n            if (metaDataJson && metaDataJson.length > 0) {\r\n                const withTokenId = metaDataJson.map((metadata, index) => {\r\n                    return {\r\n                        metadata: {\r\n                            ...metadata,\r\n                        },\r\n                        tokenId: tokenIds[index]\r\n                    }\r\n                })\r\n    \r\n                await Promise.all(metaDataJson.map(metadata => {\r\n                    return new Promise((resolve, reject) => {\r\n                        const img = new Image();\r\n                        img.onload = resolve;\r\n                        img.onerror = reject\r\n                        img.src = metadata.image;\r\n                    })\r\n                }))\r\n    \r\n                setPunks(withTokenId)\r\n            }\r\n            \r\n        }\r\n\r\n        fetchTokens();\r\n    }, [seed])\r\n    \r\n    const imgSize = 100/7;\r\n    const slope = 5/7;\r\n\r\n    const onChange = () => {\r\n        console.log(\"Punk row visible!\")\r\n    }\r\n\r\n    if (punks.length == 0) {\r\n        return (<section className=\"section-punks-row section-punks-row--loading\">\r\n            <Spinner></Spinner>\r\n        </section>)\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n        <VisibilitySensor partialVisibility={true} onChange={(ev) => {\r\n            //if (ev == true) {\r\n                setVisible(ev)\r\n            //}\r\n        }}>    \r\n            <section className={\"section-punks-row\" + (!isVisible ? \" section-punks-row--hidden\" : \"\")}>\r\n            <div className=\"punk-row-2\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 100 ${imgSize + slope*7}`} className=\"punk-row-clipped\">\r\n                <defs>\r\n                    <clipPath id=\"maskImage\" clipPathUnits=\"userSpaceOnUse\">\r\n                        <polygon points={`0,${slope*8} 100,${slope * 1} 100,${imgSize} 0,${imgSize + slope*7}`} />\r\n                    </clipPath>\r\n                    <linearGradient id=\"Gradient3\"  gradientTransform=\"rotate(75)\">\r\n                        <stop offset=\"0%\" stopColor=\"#e53800\"/>\r\n                        <stop offset=\"50%\" stopColor=\"#e53800\"/>\r\n                        <stop offset=\"70%\" stopColor=\"#fbb41d\"/>\r\n                        <stop offset=\"100%\" stopColor=\"#fbb41d\"/>\r\n                    </linearGradient>\r\n                </defs>\r\n\r\n                <g clipPath=\"url(#maskImage)\">                  \r\n                    { isVisible ? (\r\n                        <rect className=\"punk-row-gradient-background\" x=\"0\" y=\"0\" width=\"100\" height={imgSize + slope*8} fill=\"url(#Gradient3)\"/>\r\n                    ) : null}\r\n                    <PunksOfTheDayImages punks={punks} imgSize={imgSize} slope={slope} isVisible={isVisible}></PunksOfTheDayImages>                \r\n                </g>\r\n                </svg>\r\n\r\n                <SpeechBubbles isVisible={isVisible}></SpeechBubbles>\r\n                <PunksOfTheDayText isVisible={isVisible}></PunksOfTheDayText>                        \r\n            </div>\r\n            </section>\r\n        </VisibilitySensor>\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n","import useAddressUtils from '../hooks/AddressUtils';\r\nimport { useState } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from './widgets/Button';\r\nimport SocialLinks from './SocialLinks';\r\nimport PunksRow from './PunksRow';\r\n\r\nexport default function Home() {\r\n\r\n    const { formatDate } = useAddressUtils();\r\n    const [numEventsShown, setNumEventsShown] = useState(3)\r\n\r\n    const keyEvents = [{\r\n        date: \"2021-11-11\",\r\n        title: \"DAO opening\",\r\n        description: \"Grand opening of the ShitPunks DAO began with the most loyal and active community members onboarded as founders. The DAO is working on a variety of initiatives to further advance not only our own project but also the greater BSC NFT ecosystem.\"\r\n    }, {\r\n        date: \"2021-10-19\",\r\n        title: \"Pancakeswap listing\",\r\n        description: \"ShitPunks was honored to be among the first collections listed on PancakeSwap’s newly launched NFT marketplace. In less than a month, ShitPunks reached over 1000 BNB volume and became the top collection after PancakeSwap’s own NFTs.\"\r\n    }, {\r\n        title: \"Partnerships\",\r\n        description: \"Everyone loves ShitPunks! As a celebration of the Shitcoin and NFT concepts that are such foundational elements of the rise of cryptocurrency, the P2E game based on a classic, Memeopoly, was happy to create a ShitPunk player piece. Other project partnerships have also flourished such as Rising Sun, and more are on the horizon such as the much-anticipated CoinRacer game\"\r\n    }, {\r\n        date: \"2021-09-03\",\r\n        title: \"Croissant Hired\",\r\n        description: \"A professional marketer and crypto moonshot enthusiast who decided to bridge her worlds, Croissant is an original ShitPunk minter and delighted use her talents to be a part of the team.\"\r\n    }, {\r\n        date: \"2021-08-29\",\r\n        title: \"Mr. Dip Hired\",\r\n        description: \"Having found his new origins on the Binance Smart Chain, trading among his Crypto Moon Shots family, Mr. Dip couldn’t help but join the original and trendsetting Shit Punks team on its way to becoming the best in their space.\"\r\n    }, {\r\n        date: \"2021-08-11\",\r\n        title: \"Marketplace live\",\r\n        description: \"To accommodate the revolutionary idea of this project giving sales reflections to all holders, a new marketplace needed to be created. Within the first month, trading volume totaled over 700 BNB\"\r\n    }, {\r\n        date: \"2021-07-31\",\r\n        title: \"Launch\",\r\n        description: \"0.33 BNB ShitPunks opened minting on August 2 and became the fastest minting NFT project on the BSC with all punks sold out in only 3 days.\"\r\n    }]\r\n\r\n\r\n    return (\r\n        <>\r\n            <SocialLinks></SocialLinks>\r\n\r\n            <section className=\"page-home section-fw\">\r\n                <div className=\"section-contents\">\r\n                    <h1 className=\"font-bold text-center text-2xl\">Hello, Wen Marketing.</h1>\r\n                    <p className='w-10/12 text-xl text-left mx-auto key-event'>\r\n                        Here is some suggestion for our project,<br />\r\n                        how about use skype or slack for development.\r\n                        some of info should not visible on upwork chat for example email.<br />\r\n\r\n                        this is my skype id<br />\r\n                        <strong>live:.cid.3c83a9d1e7cc65df</strong><br />\r\n                        <br />\r\n                        and this is chatroom for project\r\n                        <a href='https://join.skype.com/Ke0uGCRFiglZ' className='text-2xl text-blue-700'> Join chat</a>\r\n                        <br />\r\n                        and this is slack link\r\n                        <a href='https://join.slack.com/t/newworkspace-f1t6767/shared_invite/zt-14igfgm2e-3RklYaiGVn2sJRVCCd0iWQ' className='text-2xl text-blue-700'> Join slack</a>\r\n                        <br />\r\n                        if you agree and send \"hi\" to me on skype, please type <strong className='text-2xl key-event-title'>\" I have checked\"</strong> on upwork chat<br />\r\n                        and if you don't have skype but possible to use, please type <strong className='text-2xl key-event-title'>\" let me check \"</strong> on upwork chat<br />\r\n                        if it is impossible for you to use skype, please type <strong className='text-2xl key-event-title'>\"I can't see anything on server\"</strong><br />\r\n                        if you suggest slack, please type  <strong className='text-2xl key-event-title'>\"Font size looks small\"</strong><br />\r\n                        Best regards.\r\n\r\n                    </p>\r\n                </div>\r\n                <div className=\"section-contents\">\r\n                    <h1>ShitPunks<span>.</span></h1>\r\n                    <div className=\"columns\">\r\n                        <div className=\"column-left\">\r\n                            <h2>The FIRST community-driven NFT project.</h2>\r\n                            <div className=\"home-description\">Hand-drawn and iconic, your ShitPunk is also your passport to the first BSC DAO where the <span className=\"text-accent\">5% market donations</span> provide support for exclusive content and all your community goals!</div>\r\n\r\n                        </div>\r\n                        <div className=\"column-right\">\r\n                            <NavLink className=\"button-link\" to=\"/marketplace/forsale\"><Button className=\"button-marketplace\">Buy & Sell on the marketplace now</Button></NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='justify-around flex flex-col'>\r\n\r\n                </div>\r\n            </section>\r\n\r\n            <PunksRow></PunksRow>\r\n\r\n            <section className=\"section-fw section-why\">\r\n                <div className=\"section-contents\">\r\n                    <h1>Why ShitPunks<span>?</span></h1>\r\n                    <div className=\"home-description\">\r\n                        ShitPunks are the premier NFT for the Binance Smart Chain network, the first of its kind and a clever hand-drawn take on the original CryptoPunks. We make NFTs fun!\r\n\r\n                    </div>\r\n                    <div className=\"why-shitpunks-boxes\">\r\n                        <div className=\"why-shitpunks-box\">\r\n                            <div className=\"why-shitpunks-box-title\">DAO</div>\r\n                            <div className=\"why-shitpunks-box-description\">Owners of a ShitPunk can join the DAO, a decentralized organization built to provide benefits to holders, improve the value of the ShitPunk NFTs and where users can share knowledge and skills. <span className=\"text-accent\">5% of every transaction</span> goes to the DAO</div>\r\n                        </div>\r\n                        <div className=\"why-shitpunks-box\">\r\n                            <div className=\"why-shitpunks-box-title\">Strong Marketing and Ecosystem</div>\r\n                            <div className=\"why-shitpunks-box-description\">\r\n                                We aim to be the biggest and strongest NFT on the BSC network. We have <span className=\"text-accent\">partnerships</span>, <span className=\"text-accent\">real-world marketing</span> and <span className=\"text-accent\">future expansions</span> planned. Keep an eye on our announcements for upcoming events and partnerships!\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"why-shitpunks-box\">\r\n                            <div className=\"why-shitpunks-box-title\">Biggest 3rd party NFT on PancakeSwap</div>\r\n                            <div className=\"why-shitpunks-box-description\">\r\n                                ShitPunks are the biggest third-party NFT on the <a target=\"_blank\" rel=\"noreferrer\" href=\"https://pancakeswap.finance/nfts/collections/0x11304895f41C5A9b7fBFb0C4B011A92f1020EF96/\">PancakeSwap marketplace</a>,\r\n                                and we will continue to grow with the BSC NFTs.\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"why-shitpunks-box\">\r\n                            <div className=\"why-shitpunks-box-title\">Strong & Interactive Community</div>\r\n                            <div className=\"why-shitpunks-box-description\">\r\n                                Join the <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.gg/ShitPunks\">Discord</a> to get involved in the community! As a ShitPunk owner you can join the DAO, be part of fun giveaways and other events. Watch the <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.gg/ShitPunks\">Discord</a> for more information.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"section-fw section-why\">\r\n                <div className=\"section-contents\">\r\n                    <h1>The Punks you know and love… just shittier<span>.</span></h1>\r\n                    <div className=\"home-description\">Our goofy hand-drawn take on the original CryptoPunks allows us to make NFTs fun. Despite the namesake, ShitPunks are still high-quality pieces that anyone can enjoy.</div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"section-fw section-key-events\">\r\n                <div className=\"section-contents\">\r\n                    <h1>Key Events<span>.</span></h1>\r\n                    <div className=\"key-event-list\">\r\n                        {keyEvents.slice(0, numEventsShown).map((event: any) => {\r\n                            return (\r\n                                <div className=\"key-event\" key={event.title + event.date}>\r\n                                    {event.date ? (<div className=\"key-event-date\">{formatDate(new Date(event.date).toDateString())}</div>) : null}\r\n                                    <div className=\"key-event-title\">{event.title}</div>\r\n                                    <div className=\"key-event-description\">{event.description}</div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    {numEventsShown < keyEvents.length ? (\r\n                        <Button className=\"button button-outline button-key-events\" onClick={() => {\r\n                            setNumEventsShown(Math.min(keyEvents.length, numEventsShown + 3))\r\n                        }}>Show more</Button>\r\n                    ) : null}\r\n\r\n                </div>\r\n            </section>\r\n\r\n            <PunksRow></PunksRow>\r\n\r\n        </>\r\n    )\r\n}","import { NavLink } from \"react-router-dom\";\r\n\r\nexport default function PageMenuBar(props) {\r\n    const activeClassName = \"page-menu-bar-button page-menu-bar-button--active\"\r\n    const inActiveClassName = \"page-menu-bar-button\"\r\n\r\n    const links = props.links || [\r\n        {\r\n            title: \"For sale\",\r\n            icon: \"fas fa-list\",\r\n            link: \"/marketplace/forsale\"\r\n        },\r\n        {\r\n            title: \"Trades\",\r\n            icon: \"fas fa-wave-square\",\r\n            link: \"/marketplace/activity\"\r\n        },\r\n        {\r\n            title: \"All tokens\",\r\n            icon: \"fas fa-star\",\r\n            link: \"/marketplace/all\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"page-menu-bar\">\r\n            { links.map(item => <NavLink to={item.link} className={({ isActive }) => isActive ? activeClassName : inActiveClassName }><i className={item.icon}></i> {item.title}</NavLink>)}\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport Spinner from \"../widgets/Spinner\";\r\n\r\nfunction MarketplaceStatDiff(props: any) {\r\n    const diff = parseFloat(props.diff);\r\n    const variant = diff == 0 ? \"neutral\" : (diff > 0 ? \"positive\" : \"negative\");\r\n    const value = (diff == 0 ? \"±\" : diff > 0 ? \"+\" : \"\") + diff;\r\n    return (\r\n        <span className={`marketstat-diff marketstat-diff--${variant}`}>({ value }\r\n            { props.verbose ? \" past 24 hours\" : \"\" })\r\n        </span>        \r\n    )\r\n}\r\n\r\nexport default function MarkeplaceStats(props) {\r\n\r\n    const [error, setError] = useState<any>(null)\r\n    const [stats, setStats] = useState<any>({})\r\n\r\n    useEffect(() => {\r\n        setError(null);\r\n        fetch(\"https://acy9375pq6.execute-api.us-east-1.amazonaws.com/marketplaceStats\").then(async (res: any) => {\r\n            const json = await res.json();\r\n            setStats({\r\n                ...stats,\r\n                ...json\r\n            })\r\n        }).catch(err => {\r\n            setError(\"Network error\");\r\n        })\r\n    }, [])\r\n\r\n    const getFloorDiff = () => {\r\n        const floorToday = Math.min(stats.now.floor[\"shitmarket\"], stats.now.floor[\"pcs\"]);\r\n        const floorYesterday = Math.min(stats.minus24h.floor[\"shitmarket\"], stats.minus24h.floor[\"pcs\"]);\r\n        return parseFloat((floorToday - floorYesterday).toFixed(3));\r\n    }\r\n\r\n    const getVolumeDiff = () => {\r\n        const volumeToday = stats.now.volume[\"shitmarket\"] + stats.now.volume[\"pcs\"];\r\n        const volumeYesterday = stats.minus24h.volume[\"shitmarket\"] + stats.minus24h.volume[\"pcs\"];\r\n        return parseFloat((volumeToday - volumeYesterday).toFixed(1));\r\n    }\r\n    \r\n    const getHoldersDiff = () => {\r\n        return stats.now.holdersCount - stats.minus24h.holdersCount;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"marketplace-stats\">\r\n            <div className=\"marketplace-stats-boxes\">\r\n            <div className=\"marketplace-stat-box\">\r\n                <div className=\"marketplace-stat-label\">Floor price</div>\r\n                <div className=\"marketplace-stat-value\">\r\n                    { stats.now ? (\r\n                        <div className=\"marketplace-stat-price\">\r\n                            <img className=\"bnb-icon\" src=\"/images/bnb_icon.png\" />\r\n                            {(\r\n                                Math.min(stats.now.floor[\"shitmarket\"], stats.now.floor[\"pcs\"])\r\n                            ).toFixed(3)}\r\n                            <MarketplaceStatDiff diff={getFloorDiff()}></MarketplaceStatDiff>\r\n                        </div>\r\n                    ) : <Spinner small={true}></Spinner>}\r\n                </div>\r\n                { stats.now ? (\r\n                <div className=\"extra-info\">\r\n                    <h3>Floor prices</h3>\r\n                    ShitMarket: {(0+stats.now.floor['shitmarket']).toFixed(3)} BNB <MarketplaceStatDiff \r\n                        verbose={true} \r\n                        diff={(stats.now.floor[\"shitmarket\"] - stats.minus24h.floor[\"shitmarket\"]).toFixed(3)}\r\n                    ></MarketplaceStatDiff><br></br>\r\n                    \r\n                    PancakeSwap: {(0+stats.now.floor['pcs']).toFixed(3)} BNB <MarketplaceStatDiff \r\n                        verbose={true} \r\n                        diff={(stats.now.floor[\"pcs\"] - stats.minus24h.floor[\"pcs\"]).toFixed(3)}\r\n                    ></MarketplaceStatDiff><br></br>\r\n                </div>\r\n                ) : null}\r\n            </div>\r\n\r\n\r\n            <div className=\"marketplace-stat-box\">\r\n                <div className=\"marketplace-stat-label\">Volume</div>\r\n                <div className=\"marketplace-stat-value\">\r\n                    { stats.now ? (\r\n                                    <div className=\"marketplace-stat-price\">\r\n                                    <img className=\"bnb-icon\" src=\"/images/bnb_icon.png\" />\r\n                                        {(\r\n                                            stats.now.volume[\"shitmarket\"] + stats.now.volume[\"pcs\"]\r\n                                        ).toFixed(0)}\r\n                                        <MarketplaceStatDiff diff={getVolumeDiff()}></MarketplaceStatDiff>\r\n                                    </div>\r\n                    ) : <Spinner small={true}></Spinner>}\r\n                </div>\r\n\r\n                { stats.now ? (\r\n                <div className=\"extra-info\">\r\n                    <h3>Total volume</h3>\r\n                    ShitMarket: {(0+stats.now.volume['shitmarket']).toFixed(0)} BNB <MarketplaceStatDiff \r\n                        verbose={true} \r\n                        diff={ (stats.now.volume['shitmarket'] - stats.minus24h.volume['shitmarket']).toFixed(1) }\r\n                    ></MarketplaceStatDiff><br></br>\r\n                    PancakeSwap: {(0+stats.now.volume['pcs']).toFixed(0)} BNB <MarketplaceStatDiff \r\n                        verbose={true} \r\n                        diff={ (stats.now.volume['pcs'] - stats.minus24h.volume['pcs']).toFixed(1) }\r\n                    ></MarketplaceStatDiff><br></br>\r\n                </div>\r\n                ) : null }\r\n                \r\n            </div>   \r\n\r\n            <div className=\"marketplace-stat-box\">\r\n                <div className=\"marketplace-stat-label\"># Holders</div>\r\n                <div className=\"marketplace-stat-value\">\r\n                    { stats.now ? (\r\n                        <div className=\"marketplace-stat-price\">\r\n                        {stats.now.holdersCount}\r\n                        <MarketplaceStatDiff diff={getHoldersDiff()}></MarketplaceStatDiff>\r\n                        </div>\r\n                    ) : <Spinner small={true}></Spinner>}\r\n                </div>\r\n                { stats.now ? (\r\n                <div className=\"extra-info\">\r\n                    <h3>Holders</h3>\r\n                    Number of unique addresses holding a shitpunk: {stats.now.holdersCount}\r\n                    <MarketplaceStatDiff verbose={true} diff={getHoldersDiff()}></MarketplaceStatDiff>\r\n                </div>\r\n                ) : null }\r\n            </div>   \r\n            </div>\r\n\r\n\r\n            \r\n       \r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nimport rarityData from '../data/rarity.json'\r\n\r\nexport const CollectionInfoContext = React.createContext<any>({})\r\n\r\nexport const CollectionInfoProvider: React.FC = ({\r\n    ...props\r\n}) => {\r\n    return (<CollectionInfoContext.Provider value={{\r\n        rarityData: rarityData\r\n    }}>{props.children}</CollectionInfoContext.Provider>)\r\n}\r\n","import { useState, useContext, useEffect } from \"react\"\r\nimport SelectField from \"./widgets/SelectField\"\r\nimport { CollectionInfoContext } from \"../contexts/CollectionInfoContext\"\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Button from \"./widgets/Button\";\r\nimport { Web3Context } from \"../contexts/Web3Context\";\r\n\r\nexport default function PunkFilters(props) {\r\n    const {rarityData} = useContext(CollectionInfoContext)\r\n    const {web3} = useContext(Web3Context)\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [attributeFloor, setAttributeFloor] = useState<any>({});\r\n    const [showFloorPrices, setShowFloorPrices] = useState<boolean>(true);\r\n\r\n    const handleChange = (event) => {\r\n        let params = searchParams;\r\n        if (event.value == null) {\r\n            params.delete(event.type)\r\n        } else {\r\n            params.set(event.type, event.value);\r\n        }\r\n        \r\n        setSearchParams(params, { replace: false })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchAttributeFloor = async () => {\r\n            const res = await fetch(\"https://acy9375pq6.execute-api.us-east-1.amazonaws.com/marketplaceAttributeFloor\");\r\n            const json = await res.json();\r\n            setAttributeFloor(json);\r\n        }\r\n\r\n        fetchAttributeFloor();\r\n    }, [])\r\n\r\n    const formatFloorPrice = (floorPriceString) => {\r\n        const floorPriceBnb = floorPriceString ? web3?.utils.fromWei(floorPriceString) : undefined;\r\n        const floorPriceBnbFloat = floorPriceBnb ? parseFloat(parseFloat(floorPriceBnb).toFixed(2)) : undefined;\r\n        return floorPriceBnbFloat;\r\n    }\r\n\r\n    const fields = rarityData.traits.map(trait => {\r\n        const values = trait.values.map(value => {\r\n            const floorType = attributeFloor.attributes ? attributeFloor.attributes[trait.name] : undefined;\r\n            const floorPrice = floorType ? floorType[value.name] : undefined;\r\n            \r\n            return {\r\n                label: value.name,\r\n                value: value.name,\r\n                count: value.count,\r\n                floor: formatFloorPrice(floorPrice)\r\n            }\r\n        }).sort((a,b) => {\r\n            if (showFloorPrices) {\r\n                return b.floor - a.floor;\r\n            }\r\n            return a.count - b.count;\r\n        })\r\n        const searchParam = searchParams.get(trait.name)\r\n        const defaultValue = values.find(val => val.label == searchParam)\r\n        return (<SelectField \r\n            key={trait.name + defaultValue}\r\n            placeholder={trait.name} \r\n            isClearable={true} \r\n            name={trait.name} \r\n            onChange={handleChange}\r\n            options={values}\r\n            defaultValue={defaultValue}\r\n            showFloorPrices={showFloorPrices}\r\n        />)\r\n    })\r\n    \r\n    const skins = [\r\n        {\r\n            label: \"Albino\",\r\n            value: \"Albino\",\r\n            count: 1018\r\n        },\r\n        {\r\n            label: \"Light\",\r\n            value: \"Light\",\r\n            count: 3006\r\n        },\r\n        {\r\n            label: \"Mid\",\r\n            value: \"Mid\",\r\n            count: 3031\r\n        },\r\n        {\r\n            label: \"Dark\",\r\n            value: \"Dark\",\r\n            count: 2824\r\n        },\r\n        {\r\n            label: \"Zombie\",\r\n            value: \"Zombie\",\r\n            count: 88\r\n        },\r\n        {\r\n            label: \"Ape\",\r\n            value: \"Ape\",\r\n            count: 24\r\n        },\r\n        {\r\n            label: \"Alien\",\r\n            value: \"Alien\",\r\n            count: 9\r\n        },\r\n    ].map(skin => {\r\n        return {\r\n            ...skin,\r\n            floor: formatFloorPrice(attributeFloor.skins ? attributeFloor.skins[skin.value] : undefined)\r\n        }\r\n    })\r\n\r\n    const ranks = [\r\n        {\r\n            label: \"Legendary\",\r\n            value: \"legendary\",\r\n            count: 100\r\n        },\r\n        {\r\n            label: \"Epic\",\r\n            value: \"epic\",\r\n            count: 900\r\n        },\r\n        {\r\n            label: \"Rare\",\r\n            value: \"rare\",\r\n            count: 1500\r\n        },\r\n        {\r\n            label: \"Uncommon\",\r\n            value: \"uncommon\",\r\n            count: 2500\r\n        },\r\n        {\r\n            label: \"Common\",\r\n            value: \"common\",\r\n            count: 5000\r\n        }\r\n    ].map(rank => {\r\n        return {\r\n            ...rank,\r\n            floor: formatFloorPrice(attributeFloor.skins ? attributeFloor.ranks[rank.value] : undefined)\r\n        }\r\n    })\r\n    const searchRank = searchParams.get('rank')\r\n    const searchAttrCount = searchParams.get('attrCount')\r\n    const searchSkin = searchParams.get('skin');\r\n    \r\n    const attrCountFields = [...Array(8).keys()].map((x, index) => {\r\n        const counts = [8, 333, 3560, 4501, 1420, 166, 11, 1]\r\n        return {\r\n            label: index + \" Attributes\",\r\n            value: index,\r\n            count: counts[index],\r\n            floor: formatFloorPrice(attributeFloor.attrCount ? attributeFloor.attrCount[index] : undefined)\r\n        }\r\n    })\r\n\r\n    const className = `punk-filters ` + (props.visible ? \"punk-filters--visible\" : \"\")\r\n    return (<div className={className}>\r\n        <div className=\"punk-filters-header\">\r\n            <div><i className=\"fas fa-filter\"/>&nbsp;Filters</div>\r\n        </div>\r\n        <div className=\"toggle-filters\">\r\n            <div><i className=\"fas fa-filter\"/>&nbsp;Filters</div>\r\n            <Button className=\"button--modal-close\" onClick={props.hideFilters}>&times;</Button>\r\n        </div>\r\n\r\n        <div className=\"filter-checkbox\" onClick={() => {setShowFloorPrices(!showFloorPrices)}}>\r\n            <input type=\"checkbox\" checked={showFloorPrices}></input> Show floor prices \r\n        </div>\r\n\r\n        <hr></hr>\r\n        \r\n        <SelectField \r\n            placeholder=\"Num attributes\" \r\n            isClearable={true} \r\n            name=\"attrCount\" \r\n            onChange={handleChange}\r\n            defaultValue={attrCountFields.find((item: any) => item.value == searchAttrCount)}\r\n            options={attrCountFields}\r\n            showFloorPrices={showFloorPrices}\r\n        />\r\n               \r\n        <SelectField \r\n            placeholder=\"Rarity\" \r\n            isClearable={true} \r\n            name=\"rank\" \r\n            onChange={handleChange}\r\n            defaultValue={ranks.find(item => item.value == searchRank)}\r\n            options={ranks}\r\n            showFloorPrices={showFloorPrices}\r\n        />\r\n\r\n        <SelectField \r\n            placeholder=\"Skin\" \r\n            isClearable={true} \r\n            name=\"skin\" \r\n            onChange={handleChange}\r\n            defaultValue={skins.find(item => item.value == searchSkin)}\r\n            options={skins}\r\n            showFloorPrices={showFloorPrices}\r\n        />\r\n\r\n        <hr/>\r\n\r\n        {fields}\r\n\r\n    <div className=\"search-button\" style={{width: \"100%\"}}>\r\n        <Button onClick={props.hideFilters} style={{margin: \"auto\"}} className=\"button\">Search</Button>\r\n    </div>\r\n        \r\n    </div>)\r\n}","import PageMenuBar from \"../PageMenuBar\"\r\nimport MarketplaceStats from './MarketplaceStats'\r\nimport PunkFilters from '../PunkFilters'\r\nimport PunkCardList from \"../punk-card/PunkCardList\"\r\nimport { useEffect, useState, useContext } from \"react\"\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { CollectionInfoContext } from \"../../contexts/CollectionInfoContext\"\r\nimport PunkSearchBar from \"../PunkSearchBar\"\r\nimport Spinner from \"../widgets/Spinner\"\r\nimport Button from \"../widgets/Button\"\r\nimport { Web3Context } from \"../../contexts/Web3Context\"\r\n\r\nimport TimeAgo from 'timeago-react'; // var TimeAgo = require('timeago-react');\r\n\r\n/*\r\nimport TimeAgo from 'javascript-time-ago'\r\nimport en from 'javascript-time-ago/locale/en.json'\r\nTimeAgo.addLocale(en)\r\nconst timeAgo = new TimeAgo('en-US')\r\n*/\r\n\r\n/*\r\nconst TimeAgoComponent = (props) => {\r\n    const [updateIter, setUpdateIter] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setUpdateIter(updateIter + 1)\r\n        }, 5000)\r\n    }, [updateIter])\r\n\r\n    return (\r\n        <div>syncDelay = {updateIter} -\r\n        { (new Date().getTime() - props.timestamp) / 1000 }\r\n         {timeAgo.format(props.timestamp)}</div>\r\n    )\r\n}\r\n*/\r\n\r\nexport default function Marketplace(props) {\r\n    const {rarityData} = useContext(CollectionInfoContext)\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [showFilters, setShowFilters] = useState(false)\r\n    const [fetchingMore, setFetchingMore] = useState(false)\r\n    const [error, setError] = useState<any>(null)\r\n    const {web3, contracts} = useContext(Web3Context)\r\n    const [lastKnownBlock, setLastKnownBlock] = useState(null);\r\n    const [lastSyncedBlock, setLastSyncedBlock] = useState(null);\r\n    const [syncDelay, setSyncDelay] = useState<any>(null);\r\n\r\n    const [data, setData] = useState<any>({\r\n        lastFetchedPage: -1,\r\n        loading: true,\r\n        count: 0,\r\n        tokens: []\r\n    })\r\n\r\n    const [fetchSalt, setFetchSalt] = useState(0)\r\n\r\n    const fetchTokens = async (data) => {\r\n        if (!web3 || !contracts.fetched) {\r\n            return;\r\n        }\r\n        setError(null);\r\n        setFetchingMore(true);\r\n\r\n        console.log(\"fetchTokens\", data);\r\n\r\n        const queryParams = rarityData.traits.reduce((acc, cur) => {\r\n            const value = searchParams.get(cur.name)\r\n            if (value) {\r\n                acc.push(`a_${cur.name}=${value}`)\r\n            }\r\n            return acc;\r\n        }, [])\r\n\r\n        const sortMode = searchParams.get('sort')\r\n        if (sortMode) {\r\n            //queryParams.push(\"price=\"+sortByPrice);\r\n            queryParams.push(\"sort=\"+sortMode)\r\n        } else {\r\n            if (props.marketplaceMode == \"all\") {\r\n                queryParams.push(\"sort=rank-high\")\r\n            }\r\n        }\r\n\r\n        const rank = searchParams.get('rank')\r\n        if (rank) {\r\n            queryParams.push(\"rank=\"+rank)\r\n        }\r\n\r\n        const skin = searchParams.get('skin')\r\n        if (skin) {\r\n            queryParams.push(\"skin=\"+skin)\r\n        }\r\n\r\n        const attrCount = searchParams.get('attrCount')\r\n        if (attrCount) {\r\n            queryParams.push(\"attrCount=\"+attrCount)\r\n        }\r\n\r\n\r\n        let queryString = queryParams.join('&')\r\n        if (queryString.length > 0) {\r\n            queryString = \"&\" + queryString;\r\n        }\r\n        \r\n        const pageToFetch = data.lastFetchedPage+1;\r\n\r\n        const apis = {\r\n            activity: \"marketplaceTrades\",\r\n            all: \"allTokens\"\r\n        };\r\n        const apiFunc = apis[props.marketplaceMode] || \"marketplace\";\r\n        //const res = await fetch(`http://localhost:8083?${queryString}`)\r\n        const res = await fetch(`https://acy9375pq6.execute-api.us-east-1.amazonaws.com/${apiFunc}?page=${pageToFetch}${queryString}`).catch(err => {\r\n            console.log(err);\r\n        })\r\n        if (!res) {\r\n            setError(\"Network error\");\r\n            setFetchingMore(false);\r\n\r\n            setData({\r\n                lastFetchedPage: pageToFetch,\r\n                count: data.tokens.length,\r\n                loading: false,\r\n                tokens: [\r\n                    ...data.tokens\r\n                ]\r\n            })\r\n            return;\r\n        }\r\n        const json: any = await res?.json();\r\n\r\n        const page = json.page || json[0].page;\r\n        const withMetadata = page.map(item => {\r\n            const currentTime = new Date().getTime();\r\n\r\n            const getTimestamp = () => {\r\n                if (!item.last || !item.last.timestamp) {\r\n                    return undefined;\r\n                }\r\n                return (item.last.timestamp * 1000 > currentTime) ? currentTime : item.last.timestamp * 1000;\r\n            }\r\n            const timestamp = getTimestamp()\r\n\r\n            const getLastPrice = () => {\r\n                if (item.history && item.history.length >= 2) {\r\n                    const prevListing = item.history[1];\r\n                    if (prevListing.price) {\r\n                        const prevPrice = web3.utils.fromWei(prevListing.price, 'ether');\r\n                        return prevPrice;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n            \r\n\r\n            const listingInfo = item.last ? {\r\n                buyer: item.last.buyer,\r\n                price: web3.utils.fromWei(item.last.price, 'ether'),\r\n                prevListing: getLastPrice(),\r\n                //punkID: item.last.tokenId,\r\n                seller: item.last.seller,\r\n                timestamp: timestamp,\r\n                blockNumber: item.last.blockNumber,\r\n                event: item.last.event,\r\n                marketplace: item.last.address == contracts.pcs.address ? \"pcs\" : \"shitmarket\"\r\n            } : {}\r\n\r\n            return {\r\n                metadata: item.metadata,\r\n                rank: item.metadata.rank,\r\n                image: item.metadata.image,\r\n                punkID: item.metadata.id,\r\n                ...listingInfo\r\n            }\r\n        })\r\n\r\n        const numFound = json.numFound || json[0].numFound;\r\n        const count = numFound.length > 0 ? numFound[0].numFound : 0;\r\n\r\n        setFetchingMore(false);\r\n        setLastSyncedBlock(json.lastSyncedBlock);\r\n        setData({\r\n            lastFetchedPage: pageToFetch,\r\n            count: count,\r\n            loading: false,\r\n            tokens: [\r\n                ...data.tokens,\r\n                ...withMetadata\r\n            ]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!web3) {\r\n            return;\r\n        }\r\n        web3.eth.getBlockNumber().then((res: any) => {\r\n            setLastKnownBlock(res);\r\n        })\r\n\r\n    }, [web3])\r\n\r\n    useEffect(() => {\r\n        if (!web3) {\r\n            return;\r\n        }\r\n\r\n        const fetchTimeStamps = async () => {\r\n            const lastKnown: any = lastKnownBlock ? await web3.eth.getBlock(lastKnownBlock) : null;\r\n            const lastSynced: any = lastSyncedBlock ? await web3.eth.getBlock(lastSyncedBlock) : null;\r\n            if (lastSynced && lastKnown) {\r\n                setSyncDelay({\r\n                    syncDelayInSeconds: Math.max(0, lastKnown.timestamp - lastSynced.timestamp),\r\n                    lastSyncedTime: lastSynced.timestamp\r\n                })\r\n            }\r\n        }\r\n\r\n        fetchTimeStamps();\r\n    }, [web3, lastKnownBlock, lastSyncedBlock])\r\n\r\n    useEffect(() => {\r\n        setData({\r\n            loading: true\r\n        })\r\n\r\n        fetchTokens({\r\n            lastFetchedPage: -1,\r\n            count: 0,\r\n            loading: true,\r\n            tokens: []\r\n        })\r\n       \r\n    }, [contracts.fetched, web3, searchParams, fetchSalt])\r\n\r\n    const getNetworkDelayString = () => {\r\n        if (syncDelay.syncDelayInSeconds < 60) {\r\n            return syncDelay.syncDelayInSeconds + \" seconds\"\r\n        } else if (syncDelay.syncDelayInSeconds < 3600) {\r\n            return Math.round(syncDelay.syncDelayInSeconds / 60) + \" minutes\"\r\n        } else {\r\n            return Math.round(syncDelay.syncDelayInSeconds / 3600) + \" hours\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"page page-marketplace\">\r\n            <h1>ShitMarket<span>.</span></h1>\r\n\r\n            <div className=\"marketplace-info\">\r\n                <div className=\"marketplace-description\">\r\n                5% of marketplace sales get contributed to the ShitPunks DAO. A community controlled fund that helps propel the project.\r\n                </div>\r\n                <MarketplaceStats />\r\n            </div>\r\n                        \r\n            <PageMenuBar />\r\n\r\n            <div className=\"marketplace-main\">\r\n\r\n                <PunkFilters visible={showFilters}\r\n                    hideFilters={() => { setShowFilters(false) }}\r\n                ></PunkFilters>\r\n\r\n                <div className=\"punk-results-container\">\r\n                    <PunkSearchBar \r\n                        marketplaceMode={props.marketplaceMode} \r\n                        visible={!showFilters} \r\n                        showFilters={() => {\r\n                            setShowFilters(true);\r\n                        }}\r\n                        refresh={() => {\r\n                            setFetchSalt(fetchSalt + 1)\r\n                        }}\r\n                    />\r\n\r\n{ syncDelay ? (\r\n    <>\r\n    <div className=\"network-delay\">Network delay: {getNetworkDelayString()}</div>\r\n    </>\r\n) : null}\r\n\r\n                    \r\n\r\n                    { (data.loading) ? (\r\n                        <Spinner></Spinner> \r\n                    ) : (\r\n                        <>\r\n                            <PunkCardList classSuffix=\"marketplace\" total={data.count} tokens={data.tokens}></PunkCardList>\r\n                            \r\n                            { (fetchingMore) ? (\r\n                                <Spinner></Spinner> \r\n                            ) : \r\n                                (data.tokens.length >= data.count) ? null : (\r\n                                    <Button className=\"button button-fetch-more\" onClick={() => { fetchTokens(data) }}>Load more</Button>\r\n                                )\r\n                            }\r\n\r\n                            { error ? (\r\n                                <div className=\"network-error\">Network error :( Please try again later.</div>\r\n                            ) : null}\r\n                        </>                        \r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport PageMenuBar from './PageMenuBar';\r\nimport Spinner from './widgets/Spinner';\r\n\r\nfunction NFTCalendarDescription(props) {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const words = props.text.split(\" \");\r\n    const first50 = words.splice(0, 30);\r\n    if (words.length == 0) {\r\n        return (first50.join(\" \"))\r\n    } else {\r\n        return (<>\r\n            {first50.join(\" \")}\r\n            { expanded ? (\r\n                <>\r\n                    {props.text}\r\n                    <div className=\"text-link\" onClick={() => {setExpanded(false)}}>show less</div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {first50.join(\" \") + \"...\"}\r\n                    <div className=\"text-link\" onClick={() => {setExpanded(true)}}>show more</div>\r\n                </>\r\n            ) }\r\n            \r\n        </>)\r\n    }\r\n\r\n}\r\n\r\nfunction NFTCalendarRow(props) {\r\n    const socialLinks: any[] = [];\r\n    const addSocialLink = (type, url) => {\r\n        if (url) {\r\n            socialLinks.push({\r\n                type, \r\n                url\r\n            })\r\n        }\r\n    }\r\n\r\n    addSocialLink(\"web\", props.url_web);\r\n    addSocialLink(\"twitter\", props.url_twitter);\r\n    addSocialLink(\"discord\", props.url_discord);\r\n    addSocialLink(\"telegram\", props.url_telegram);\r\n\r\n    const socialIcons = {\r\n        \"twitter\": \"fab fa-twitter\",\r\n        \"discord\": \"fab fa-discord\",\r\n        \"web\": \"fas fa-home\",\r\n        \"telegram\": \"fab fa-telegram\",\r\n    }\r\n\r\n    const imageUrl = `https://shitpunks-nftdrops.s3.amazonaws.com/${props.image}`\r\n\r\n    return (\r\n        <>\r\n            <a className=\"nft-calendar-image\" target=\"_blank\" href={props.url_web}>\r\n                <img src={imageUrl}></img>\r\n            </a>\r\n            <div>\r\n                <div className=\"nft-calendar-title\">\r\n                    <a target=\"_blank\" href={props.url_web}>\r\n                        {props.title}\r\n                    </a>\r\n                </div>\r\n                <div className=\"nft-calendar-links\">\r\n                    { socialLinks.map(item => {\r\n                        return <a rel=\"noreferrer\" \r\n                            target=\"_blank\" \r\n                            key={item.url} \r\n                            href={item.url}><i className={socialIcons[item.type]}></i></a>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"nft-calendar-token\">\r\n                { props.mintPrice.length > 0 ? (\r\n                    <div className=\"nft-calendar-token-price\"><img className=\"bnb-icon\" src=\"/images/bnb_icon.png\"/> {props.mintPrice}</div>\r\n                ) : null}\r\n                <div>{props.totalSupply} tokens </div>\r\n            </div>\r\n            <div className=\"nft-calendar-description\">\r\n                <NFTCalendarDescription text={props.description}></NFTCalendarDescription>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport function NFTCalendar(props) {\r\n    const [upcomingMints, setUpcomingMints] = useState<any[] | null>(null);\r\n    const [pastMints, setPastMints] = useState<any[] | null>(null);\r\n\r\n    useEffect(() => {\r\n        setUpcomingMints(null)\r\n        setPastMints(null)\r\n\r\n        fetch('https://1crfk34q6g.execute-api.us-east-1.amazonaws.com/beta/nftdrops').then(async res => {\r\n            const json: any = await res.json();\r\n            \r\n            const mints = json.reduce((byDate, nftDrop) => {\r\n                const dateString = new Date(nftDrop.date).toDateString();\r\n                if (!byDate[dateString]) {\r\n                    byDate[dateString] = {\r\n                        date: dateString,\r\n                        dateTime: nftDrop.date,\r\n                        drops: []\r\n                    }\r\n                }\r\n                byDate[dateString].drops.push(nftDrop)\r\n                return byDate;\r\n            }, {})\r\n\r\n            const currentTime = new Date().getTime();\r\n            const tempUpcoming = Object.values(mints).filter((item: any) => item.dateTime >= currentTime)\r\n            const tempPastMints = Object.values(mints).filter((item: any) => item.dateTime < currentTime)\r\n\r\n            setUpcomingMints(tempUpcoming.sort((a: any, b: any) => a.dateTime - b.dateTime))\r\n            setPastMints(tempPastMints.sort((a: any, b: any) => b.dateTime - a.dateTime))\r\n        });\r\n    }, [])\r\n\r\n    const mintsToShow = props.mode == \"released\" ? pastMints : upcomingMints;\r\n\r\n    return (\r\n        <div className=\"page page-nft-calendar\">\r\n            <h1>NFT Drops<span>.</span></h1>\r\n\r\n            <div className=\"nft-calendar-intro\">\r\n                <div className=\"nft-calendar-addtoken\">\r\n                    Do you want to list your project? Submit it <a href=\"/nftdrops/form\">here</a>.\r\n                </div>\r\n\r\n                <div className=\"nft-calendar-disclaimer\">\r\n                    <i className=\"fa-2x fas fa-exclamation-circle\"></i>\r\n                    <div>\r\n                        Listed projects are <span className=\"text-accent\">not endorsed or verified by ShitPunks</span>.<br></br>\r\n                        Do your own research before investing.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <PageMenuBar links={[\r\n                {\r\n                    title: \"Upcoming\",\r\n                    icon: \"far fa-calendar\",\r\n                    link: \"/nftdrops/upcoming\"\r\n                },\r\n                {\r\n                    title: \"Released\",\r\n                    icon: \"far fa-calendar-check\",\r\n                    link: \"/nftdrops/released\"\r\n                }\r\n            ]}></PageMenuBar>\r\n            \r\n            { mintsToShow === null ? <Spinner></Spinner> : null}\r\n\r\n            { mintsToShow && mintsToShow.length === 0 ? (\r\n                <div>No results</div>\r\n            ) : null}\r\n\r\n            <div className=\"nft-calendar-grid\">\r\n                { \r\n                    mintsToShow?.map(dateInfo => {\r\n                        return <>\r\n                            <div className=\"nft-calendar-date-row\">\r\n                                <td colSpan={4} className=\"nft-calendar-date\">{dateInfo.date}</td>\r\n                            </div>\r\n                            {\r\n                                dateInfo.drops.map(data => <NFTCalendarRow key={data.title} {...data}></NFTCalendarRow>)\r\n                            }\r\n                        </>\r\n                    })\r\n                    \r\n                }\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import Button from \"./widgets/Button\";\r\nimport Input from \"./widgets/Input\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport SelectField from \"./widgets/SelectField\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Web3Context } from \"../contexts/Web3Context\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"./widgets/Spinner\";\r\n\r\nconst TextInput = (props) => {\r\n    const onChange = (ev) => {\r\n        if (props.onChange) {\r\n            props.onChange(ev.target.value);\r\n        }\r\n    }\r\n\r\n    return <div style={{display: 'flex', flexDirection: 'column'}}>\r\n        <label>{props.label}</label>\r\n        <input \r\n            name={props.name}\r\n            type=\"text\" \r\n            onChange={onChange}\r\n            value={props.value || \"\"}></input>\r\n    </div>\r\n}\r\n\r\nfunction NFTCalendarFormPageContainer(props) {\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>List NFT project<span>.</span></h1>\r\n            {props.children}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default function NFTCalendarForm() {\r\n\r\n    const { web3 } = useContext(Web3Context);\r\n\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [imageFileSrc, setImageFileSrc] = useState(null);\r\n    const [validationErrors, setValidationErrors] = useState<any>({});\r\n    const [status, setStatus] = useState(\"\");\r\n    \r\n    const [formValues, setFormValues] = useState<any>({\r\n        title: \"\",\r\n        description: \"\",\r\n        date: new Date(),\r\n        mintPrice: \"\",\r\n        totalSupply: \"\",\r\n        contract: \"\",\r\n        name: \"\",\r\n        url_web: \"\",\r\n        url_twitter: \"\",\r\n        url_discord: \"\",\r\n        url_telegram: \"\"\r\n    });\r\n\r\n    const validateForm = () => {\r\n        const validateString = (key, errors, minWords) => {\r\n            if (formValues[key].length == 0) {\r\n                errors[key] = \"Can't be empty\"\r\n            } else {\r\n                const numWords = formValues[key].split(\" \").length;\r\n                if (numWords < minWords) {\r\n                    errors[key] = \"Neet to be at least \" + minWords + \" words.\"\r\n                }\r\n            }\r\n        }\r\n\r\n        const validateUrl = (key, errors) => {\r\n            function validURL(str) {\r\n                var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n                  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n                  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n                  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n                  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n                  '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n                return !!pattern.test(str);\r\n            }\r\n            const value = formValues[key];\r\n            if (value && value.length > 0 && !validURL(value)) {\r\n                errors[key] = \"Invalid URL\";\r\n            }\r\n        }\r\n\r\n        let errors: any = {};\r\n\r\n        validateString(\"title\", errors, 1);\r\n        validateString(\"description\", errors, 10);\r\n        \r\n        if (!formValues.image || formValues.image.length == 0) {\r\n            errors.image = \"Image is required\"\r\n        }\r\n\r\n        if (formValues.contract && formValues.contract.length > 0) {\r\n            if (!web3?.utils.isAddress(formValues.contract)) {\r\n                errors.contract = \"Invalid contract address\";\r\n            }\r\n        }\r\n\r\n        if (formValues.totalSupply.length > 0 && /^\\d+$/.test(formValues.totalSupply) == false) {\r\n            errors.totalSupply = \"Not a valid number\";\r\n        }\r\n        \r\n        if (formValues.mintPrice.length > 0 && /^\\d*\\.?\\d*$/.test(formValues.mintPrice) == false) {\r\n            errors.mintPrice = \"Not a valid decimal number\";\r\n        } \r\n        \r\n        validateUrl(\"url_web\", errors);\r\n        validateUrl(\"url_twitter\", errors);\r\n        validateUrl(\"url_discord\", errors);\r\n        validateUrl(\"url_telegram\", errors);\r\n\r\n        setValidationErrors(errors);\r\n    }\r\n\r\n    useEffect(validateForm, [formValues])\r\n    \r\n\r\n    const setFormValue = (key) => {\r\n        return (newValue) => {\r\n            setFormValues({\r\n                ...formValues,\r\n                [key]: newValue\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const handleImageFileChange = (file) => {\r\n        if (file.size > 1024*1024) {\r\n            return;\r\n        }\r\n\r\n        setImageFile(file);\r\n\r\n        var reader = new FileReader();\r\n        reader.onload = function (e: any) {\r\n            setImageFileSrc(e.target.result);\r\n            setFormValue(\"image\")(e.target.result);\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    };\r\n    \r\n    async function submitForm(event) {\r\n        setStatus(\"submitting\");\r\n\r\n        event.preventDefault();\r\n        \r\n        try {\r\n            const res = await axios.post(\"https://1crfk34q6g.execute-api.us-east-1.amazonaws.com/beta/nftdrops\", formValues)\r\n            \r\n            setTimeout(() => {\r\n                if (res.status === 200) {\r\n                    setStatus(\"submitted\");\r\n                } else {\r\n                    setStatus(\"error\");\r\n                }\r\n            }, 500);    \r\n        } catch (e) {\r\n            setStatus(\"error\");\r\n        }\r\n    }\r\n\r\n    if (status == \"submitting\") {\r\n        return (\r\n            <NFTCalendarFormPageContainer>\r\n                <h2>Submitting details...</h2>\r\n                <Spinner></Spinner>\r\n            </NFTCalendarFormPageContainer>\r\n        )\r\n    }\r\n    else if (status == \"submitted\") {\r\n        return (\r\n            <NFTCalendarFormPageContainer>\r\n            <h2>Thank you!</h2>\r\n            <div>Your submission will be reviewed shortly.</div>\r\n            <br></br>\r\n            <a href=\"/nftdrops\"><i className=\"fas fa-caret-left\"></i> Back to calendar view</a>\r\n            </NFTCalendarFormPageContainer>           \r\n        )\r\n    }\r\n\r\n    return (\r\n        <NFTCalendarFormPageContainer>\r\n\r\n            <form className=\"nftdrop-form\" \r\n                onSubmit = { submitForm }\r\n                action = \"#\"\r\n                \r\n            >\r\n                                \r\n                                { /* \r\n                                method=\"POST\" \r\n                action=\"http://localhost:3010/test\"\r\n                                action=\"https://1crfk34q6g.execute-api.us-east-1.amazonaws.com/beta/nftdrops\" */ }\r\n\r\n                <h3>Project info</h3>\r\n                \r\n                <TextInput name=\"title\" label=\"*Project title\" value={formValues.title} onChange={setFormValue(\"title\")} />\r\n                <div className=\"nftdrop-validation-error\">{validationErrors.title}</div>\r\n\r\n                <label>*Cover image <span>Square image, max 1MB</span></label>\r\n                <div className=\"image-upload-component\">\r\n                <FileUploader maxSize={1} handleChange={handleImageFileChange} name=\"filename\" types={[\"JPG\", \"PNG\", \"GIF\", \"WEBP\"]} />\r\n                { imageFileSrc ? <img className=\"image-preview\" src={imageFileSrc} /> : null }\r\n                </div>\r\n                <input type=\"hidden\" name=\"image\" value={imageFileSrc || \"\"}></input>\r\n                <div className=\"nftdrop-validation-error\">{validationErrors.image}</div>\r\n                \r\n                <label>*Description <span>Brief description around 30-50 words</span></label>\r\n                <textarea name=\"description\" value={formValues.description} rows={4} onChange={(event) => { setFormValue(\"description\")(event.target.value) }}></textarea>\r\n                <div className=\"nftdrop-validation-error\">{validationErrors.description}</div>\r\n\r\n                <label>*Mint date</label>\r\n                <DatePicker name=\"date\" selected={formValues.date} onChange={setFormValue(\"date\")} />\r\n                <div className=\"nftdrop-validation-error\">{validationErrors.date}</div>\r\n\r\n                <input type=\"text\" id=\"name\" name=\"name\" value=\"\" tabIndex={-1} autoComplete=\"off\"></input>\r\n\r\n                <div className=\"two-columns\">\r\n                    <div>\r\n                        <TextInput name=\"num_tokens\" id=\"num-tokens\" type=\"int\" label=\"Total supply\" value={formValues.totalSupply} onChange={setFormValue(\"totalSupply\")}/>\r\n                        <div className=\"nftdrop-validation-error\">{validationErrors.totalSupply}</div>\r\n                    </div>\r\n                    <div>\r\n                        <TextInput name=\"mint_price\" id=\"mint-price\" type=\"decimal\" label=\"Mint price (in BNB)\" value={formValues.mintPrice} onChange={setFormValue(\"mintPrice\")}/>\r\n                        <div className=\"nftdrop-validation-error\">{validationErrors.mintPrice}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <TextInput name=\"contract\" id=\"contract\" type=\"contract\" label=\"NFT contract address\" value={formValues.contract} onChange={setFormValue(\"contract\")}/>\r\n                <div className=\"nftdrop-validation-error\">{validationErrors.contract}</div>\r\n\r\n\r\n                <br></br>\r\n                <h3>Links</h3>\r\n                <TextInput name=\"url_website\" label=\"Website\" type=\"url\" value={formValues.url_web} onChange={setFormValue(\"url_web\")}/>\r\n                <div className=\"nftdrop-validation-error\">{validationErrors.url_web}</div>\r\n                <TextInput name=\"url_twitter\" label=\"Twitter\" type=\"url\" value={formValues.url_twitter} onChange={setFormValue(\"url_twitter\")}/>\r\n                <div className=\"nftdrop-validation-error\">{validationErrors.url_twitter}</div>\r\n                <TextInput name=\"url_discord\" label=\"Discord\" type=\"url\" value={formValues.url_discord} onChange={setFormValue(\"url_discord\")}/>\r\n                <div className=\"nftdrop-validation-error\">{validationErrors.url_discord}</div>\r\n                <TextInput name=\"url_telegram\" label=\"Telegram\" type=\"url\" value={formValues.url_telegram} onChange={setFormValue(\"url_telegram\")}/>\r\n                <div className=\"nftdrop-validation-error\">{validationErrors.url_telegram}</div>\r\n\r\n                <br></br>\r\n                <Button className={Object.keys(validationErrors).length > 0 ? \"button--disabled\" : \"\"}>Submit</Button>\r\n                {Object.keys(validationErrors).length > 0 ? (\r\n                    <div className=\"nftdrop-validation-error\">From has errors</div>\r\n                ) : null}\r\n                {status == \"error\" ? (\r\n                    <div className=\"nftdrop-validation-error\">There was an error submitting. Please check form details or try again later.</div>\r\n                ) : null}\r\n            </form>\r\n        </NFTCalendarFormPageContainer>\r\n    )\r\n\r\n}\r\n\r\n/*\r\ndate: \"2022-01-28\"\r\n\r\nextra: \"7717 uniquely generated NFT project on the Solana Blockchain. Each pirate is randomly generated from hundreds of hand-drawn attributes ranging from common to super rare. In addition, each pirate has unique battle stats.\"\r\nimage: \"https://howrare.is/drop_logos/2285_N5J2M1kj.png\"\r\nleft: \"\"\r\nname: \"Sol Pirates\"\r\nnft_count: 7717\r\nprice: \"0.35 SOL\"\r\ntime: \"00:00 UTC\"\r\n\r\ndiscord: \"https://discord.gg/9j2h7C4AaR\"\r\ntwitter: \"https://twitter.com/solanapirates\"\r\nwebsite: \"https://solpirates.io\"\r\n*/","import { useState, useEffect } from 'react';\r\nimport Spinner from './widgets/Spinner';\r\nimport useAddressUtils from '../hooks/AddressUtils';\r\n\r\nexport default function PunkTradeHistory(props) {\r\n    const [tradeHistory, setTradeHistory] = useState<any>(undefined)\r\n    const { formatDate, formatAddressMini, addressLink, walletLink } = useAddressUtils();\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            const res = await fetch(\"https://acy9375pq6.execute-api.us-east-1.amazonaws.com/shitPunkHistory?index=\"+props.punkId)\r\n            const json = await res.json();\r\n            const sorted = json.sort((a: any, b: any) => {\r\n                return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n            });\r\n\r\n            setTradeHistory(sorted);\r\n            return json;\r\n        }\r\n\r\n        fetchHistory();\r\n    }, [props.punkId, props.salt])\r\n\r\n    if (!tradeHistory) {\r\n        return (<Spinner></Spinner>)\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"page-punk-trade-history-list\">\r\n            <div>Date</div>\r\n            <div>Event</div>\r\n            <div>Amount</div>\r\n            <div>Seller</div>\r\n            <div>Buyer</div>\r\n            {\r\n                tradeHistory.map((row, index) => {\r\n                    return (<>\r\n                        <div key={\"date\"+row.createdAt} className=\"punk-history-date\">{formatDate(row.createdAt)}</div>\r\n                        <div key={\"event\"+row.createdAt} className=\"punk-history-event\">{row.event}</div>\r\n                        <div key={\"price\"+row.createdAt} className=\"punk-history-price\">{\r\n                            row.price !== undefined ? ( (<>\r\n                                <img className=\"bnb-icon\" src=\"/images/bnb_icon.png\"/>\r\n                                {row.price}\r\n                            </>) ) : null\r\n                        }</div>\r\n                        { row.seller ? (\r\n                            <div key={\"seller\"+row.createdAt} className=\"punk-history-address\">\r\n                                {walletLink(row.seller)} <a href={addressLink(row.seller)} rel=\"noreferrer\" target=\"_blank\">{formatAddressMini(row.seller)}</a> \r\n                            </div>\r\n                        ) : <div key={\"seller\"+index}></div>}\r\n                        \r\n                        { row.buyer ? (\r\n                            <div key={\"buyer\"+row.createdAt} className=\"punk-history-address\">\r\n                                {walletLink(row.buyer)} <a href={addressLink(row.buyer)} rel=\"noreferrer\" target=\"_blank\">{formatAddressMini(row.buyer)}</a> \r\n                            </div>\r\n                        ) : <div key={\"buyer\"+index}></div>}\r\n                        \r\n                    </>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n               \r\n    )\r\n}","import Popup from \"reactjs-popup\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Web3Context } from '../contexts/Web3Context';\r\nimport useAddressUtils from \"../hooks/AddressUtils\";\r\nimport Input from \"../components/widgets/Input\";\r\nimport Spinner from \"../components/widgets/Spinner\";\r\nimport { TransactionConfig } from 'web3-core'\r\nimport Button from \"../components/widgets/Button\";\r\n\r\nfunction ListStep_WrapToken(props) {\r\n\r\n    const { addressLink } = useAddressUtils()\r\n    const [ waiting, setWaiting ] = useState(false)\r\n    const [ state, setState ] = useState<any>({})\r\n\r\n    const wrapToken = async () => {\r\n        setWaiting(true);\r\n\r\n\r\n        const result = await props.writeContract(props.contracts.shitpunks, 'safeTransferFrom', [\r\n            props.signedInAddress, \r\n            props.contracts.shitpunks2.address,\r\n            props.tokenId\r\n        ]);\r\n\r\n        setState(result);\r\n        setWaiting(false);\r\n    }\r\n\r\n    const render = () => {\r\n        if (waiting) {\r\n            return (\r\n                <>\r\n                Wrapping token...\r\n                <Spinner></Spinner>\r\n                </>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                Token needs to be wrapped with the new contract to allow listing.\r\n                { state.error ? (<div className='error-text'>{state.error}</div>) : null}\r\n                <Button onClick={wrapToken} className=\"button\">Wrap token</Button>\r\n\r\n                <div className=\"action-description\">\r\n                    {props.metadata.name} is still on the <a href={addressLink(props.contracts.shitpunks.address)} rel=\"noreferrer\" target=\"_blank\">old</a> ShitPunks contract. \r\n                    Wrapping the token will send it to the <a href={addressLink(props.contracts.shitpunks2.address)} rel=\"noreferrer\" target=\"_blank\">new</a> ShitPunks contract. You will be given a new copy of the token back that has extended functionality.\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n\r\n            {render()}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nfunction ListStep_ApproveContract(props) {\r\n\r\n    const [state, setState] = useState<any>({\r\n        state: \"\"\r\n    })\r\n\r\n    const startApproval = async () => {\r\n        setState({\r\n            state: \"approving\"\r\n        })\r\n\r\n        const contractJson = props.contracts.shitpunks2;\r\n\r\n        try {\r\n\r\n            const contract = new props.web3.eth.Contract(contractJson.abi, contractJson.address)\r\n            const tx = await contract.methods.approve(props.contracts.shitmarket.address, props.tokenId);\r\n            const data = tx.encodeABI();\r\n            const gas = await tx.estimateGas({from: props.signedInAddress});\r\n            const gasPrice = await props.web3.eth.getGasPrice();       \r\n            const transcationConfig: TransactionConfig = {\r\n                from: props.signedInAddress,\r\n                to: contractJson.address,\r\n                gas: gas,\r\n                gasPrice: gasPrice,\r\n                data: data,\r\n                chainId: 0x38,\r\n            }\r\n\r\n            const receipt = await props.web3.eth.sendTransaction(transcationConfig);       \r\n            setState({\r\n                state: \"done\"\r\n            })\r\n\r\n            props.onSuccess();\r\n\r\n        } catch (e: any) {\r\n            console.log(\"Failed\", e);\r\n            setState({\r\n                state: \"failed\",\r\n                message: e.message\r\n            })\r\n        }\r\n    }\r\n\r\n    if (state.state == \"done\") {\r\n        return (<>\r\n        </>)\r\n    }\r\n    \r\n    const getStateUI = () => {\r\n        if (state.state == \"approving\") {\r\n            return (<div style={{margin: \"2rem\"}}><Spinner></Spinner></div>)\r\n        } else {\r\n            if (state.state == \"failed\") {\r\n                return (\r\n                    <>\r\n                    <div className=\"error-text\">{state.message}</div>\r\n                    <Button className=\"button\" onClick={startApproval}>Try again</Button>\r\n                    </>\r\n                )\r\n            } else {\r\n                return (<Button className=\"button\" onClick={startApproval}>Approve contract</Button>)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            ShitMarket needs approval to manage your token.\r\n\r\n            { getStateUI() }\r\n            \r\n            <div className=\"action-description\">\r\n                Gives permission to ShitMarket to transfer {props.metadata.name} to another account. The approval is cleared when the token is transferred.\r\n            This is part of the ERC 721 standard. (<a href=\"https://docs.openzeppelin.com/contracts/3.x/api/token/erc721#IERC721-approve-address-uint256-\" rel=\"noreferrer\" target=\"_blank\">Read more</a>)\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction ListStep_ListToken(props) {\r\n\r\n    const [price, setPrice] = useState(\"1\")\r\n    const [state, setState] = useState<any>({\r\n        state: \"\"\r\n    })\r\n\r\n    const listToken = async () => {\r\n        setState({\r\n            state: \"listing\"\r\n        })\r\n\r\n        try {\r\n            const priceInWei = props.web3.utils.toWei(price, 'ether')\r\n            const results = await props.writeContract(props.contracts.shitmarket, 'createListing', [props.tokenId, priceInWei]);\r\n\r\n            setState({\r\n                state: \"done\",\r\n                receipt: results.receipt\r\n            })\r\n        } catch (e: any) {\r\n            setState({\r\n                state: \"failed\",\r\n                message: e.message\r\n            })\r\n        }   \r\n    }\r\n\r\n    const render = () => {\r\n        if (state.state == \"listing\") {\r\n            return <Spinner></Spinner>\r\n        } else if (state.state == \"done\") {\r\n            return (<>\r\n                <div>{props.metadata.name} has been listed for {price} BNB.</div>\r\n                <div>View <a rel=\"noreferrer\" target=\"_blank\" href={props.txLink(state.receipt.transactionHash)}>transaction here</a>.</div>\r\n                <Button onClick={() => {\r\n                    props.onSuccess();\r\n                    props.close()\r\n                }} className=\"button button button-ok\">Ok</Button>\r\n            </>)\r\n        } else {\r\n            return (<>\r\n            <div className=\"price-input-container\">\r\n                <Input label=\"Price\" className=\"price-input\" type=\"number\" value={price} onChange={setPrice}></Input> \r\n                <div style={{marginTop: \"2rem\"}}>BNB</div>\r\n\r\n                <Button onClick={listToken} style={{marginTop: \"2rem\", marginLeft: \"2rem\"}} className=\"button\">List for sale</Button>\r\n            </div>\r\n            </>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {render()}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default function ListOnMarketModal(props) {\r\n\r\n    const {signedInAddress, web3, contracts, writeContract} = useContext(Web3Context)\r\n    const [isWrapped, setWrapped] = useState(false)\r\n    const [isApproved, setApproved] = useState(false)\r\n    const [isLoading, setLoading] = useState(true)\r\n    const {txLink} = useAddressUtils();\r\n\r\n    const checkWrapped = async () => {\r\n        setLoading(true)\r\n        if (!web3) {\r\n            return;\r\n        }\r\n        \r\n        const contract = new web3.eth.Contract(contracts.shitpunks.abi, contracts.shitpunks.address)\r\n        const owner = await contract.methods.ownerOf(props.tokenId).call()\r\n        const isWrapped = owner === contracts.shitpunks2.address;\r\n        setWrapped(isWrapped);\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkWrapped();\r\n    }, [web3])\r\n\r\n    const checkApproval = async () => {\r\n        setLoading(true)\r\n        if (!web3) {\r\n            return;\r\n        }\r\n        \r\n        const contract = new web3.eth.Contract(contracts.shitpunks2.abi, contracts.shitpunks2.address)\r\n        const approvedAddress = await contract.methods.getApproved(props.tokenId).call()\r\n        const isApproved = approvedAddress === contracts.shitmarket.address;\r\n        setApproved(isApproved);\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkApproval();\r\n    }, [isWrapped])\r\n\r\n    const getStep = (close: any) => {\r\n        if (isLoading) {\r\n            return <Spinner></Spinner>\r\n        }\r\n        if (!isWrapped) {\r\n            return (<ListStep_WrapToken {...props} signedInAddress={signedInAddress} contracts={contracts} writeContract={writeContract}\r\n                onSuccess={checkWrapped}\r\n            ></ListStep_WrapToken>)\r\n        } else if (!isApproved) {\r\n            return (<ListStep_ApproveContract {...props} web3={web3} signedInAddress={signedInAddress} contracts={contracts}\r\n                onSuccess={checkApproval}\r\n                ></ListStep_ApproveContract>)\r\n        } else {\r\n            return (<ListStep_ListToken \r\n                    close={close} \r\n                    onSuccess={props.onChange} \r\n                    txLink={txLink} \r\n                    {...props} \r\n                    web3={web3} \r\n                    signedInAddress={signedInAddress} \r\n                    contracts={contracts}\r\n                    writeContract={writeContract}\r\n                ></ListStep_ListToken>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Popup\r\n            nested\r\n            modal\r\n            trigger={\r\n                ({...props.children})\r\n            }>\r\n            {(close: any) => (<div className=\"modal list-market-modal\">   \r\n                    <Button className=\"button--modal-close\" onClick={close}>&times;</Button>\r\n                    <h3>List token on ShitMarket</h3>\r\n                    <div className=\"content\">\r\n                        { getStep(close) }\r\n                    </div>\r\n            </div>)\r\n            }\r\n        </Popup>\r\n    )\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Web3Context } from '../contexts/Web3Context';\r\nimport useAddressUtils from \"../hooks/AddressUtils\";\r\nimport Input from \"../components/widgets/Input\";\r\nimport Spinner from \"../components/widgets/Spinner\";\r\nimport Button from \"../components/widgets/Button\";\r\n\r\nexport default function AdjustPriceModal(props) {\r\n\r\n    const [price, setPrice] = useState(props.price)\r\n    const [result, setResult] = useState<any>()\r\n    const {web3, writeContract, contracts} = useContext(Web3Context)\r\n    const { txLink } = useAddressUtils()\r\n\r\n    const adjustPrice = async () => {\r\n        if (!web3) {\r\n            setResult({\r\n                success: false,\r\n                error: \"Wallet is not connected\"\r\n            })\r\n            return;\r\n        }\r\n        setResult({\r\n            success: false,\r\n            waiting: true\r\n        })\r\n        const priceInWei = web3.utils.toWei(price, 'ether')\r\n\r\n        const adjustPriceOnMarketplace = async () => {\r\n            if (props.sellInfo.marketplace == 'PancakeSwap') {\r\n                return await writeContract(contracts.pcs, \"modifyAskOrder\", [contracts.shitpunks2.address, props.tokenId, priceInWei])\r\n            } else {\r\n                return await writeContract(contracts.shitmarket, \"createListing\", [props.tokenId, priceInWei])\r\n            }\r\n        }\r\n\r\n        const result = await adjustPriceOnMarketplace();\r\n        \r\n        setResult(result);\r\n    }\r\n\r\n    const render = (close: any) => {\r\n        if (result && result.success) {\r\n            return (<>\r\n                <div>{props.metadata.name} has been listed for {price} BNB.</div>\r\n                <div>View <a rel=\"noreferrer\" target=\"_blank\" href={txLink(result.receipt.transactionHash)}>transaction here</a>.</div>\r\n                <Button onClick={close} className=\"button button button-ok\">Ok</Button>\r\n            </>)\r\n        } else if (result && result.waiting) {\r\n            return <div><Spinner></Spinner></div>\r\n        } else {\r\n            return (\r\n                <>\r\n                <div className=\"price-input-container\">\r\n                    <Input className=\"price-input\" type=\"number\" label=\"BNB\" value={price} onChange={setPrice}></Input>\r\n                    <Button onClick={adjustPrice} className=\"button\">Adjust price</Button>\r\n                </div>\r\n                { (result && result.error) ? <div className=\"error-text\">{result.error}</div> : null}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Popup\r\n            nested\r\n            modal\r\n            onClose={() => {\r\n                props.onClose()\r\n            }}\r\n            trigger={\r\n                ({...props.children})\r\n            }>\r\n            {(close: any) => (<div className=\"modal adjust-price-modal\">   \r\n                    <Button className=\"button--modal-close\" onClick={close}>&times;</Button>\r\n                    <h3>Adjusting price of {props.metadata.name}</h3>\r\n                    <div className=\"content\">\r\n                        {render(close)}\r\n                    </div>\r\n            </div>)\r\n            }\r\n        </Popup>\r\n    )\r\n}","import Popup from \"reactjs-popup\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Web3Context } from '../contexts/Web3Context';\r\nimport useAddressUtils from \"../hooks/AddressUtils\";\r\nimport Spinner from \"../components/widgets/Spinner\";\r\nimport Button from \"../components/widgets/Button\";\r\n\r\nexport default function BuyPunkModal(props) {\r\n\r\n    const [price, setPrice] = useState(props.price)\r\n    const [result, setResult] = useState<any>()\r\n    const {web3, writeContract, contracts} = useContext(Web3Context)\r\n    const { txLink } = useAddressUtils()\r\n\r\n    const signTransaction = async () => {\r\n        if (!web3) {\r\n            setResult({\r\n                success: false,\r\n                error: \"Wallet is not connected\"\r\n            })\r\n            return;\r\n        }\r\n\r\n        setResult({\r\n            success: false,\r\n            waiting: true\r\n        })\r\n        \r\n        const value = web3.utils.toWei(price, 'ether');\r\n\r\n        console.log(\"props.sellInfo.marketplace\", props.sellInfo.marketplace, props.tokenId, price);\r\n\r\n        if (props.sellInfo.marketplace === 'PancakeSwap' ||\r\n            props.sellInfo.marketplace === 'pcs') {\r\n            const result = await writeContract(contracts.pcs, \"buyTokenUsingBNB\", [contracts.shitpunks2.address, props.tokenId], value)\r\n            setResult(result);\r\n        } else {\r\n            const result = await writeContract(contracts.shitmarket, \"buy\", [props.tokenId], value)\r\n            setResult(result);\r\n        }        \r\n    }\r\n\r\n    const render = (close: any) => {\r\n        if (result && result.success) {\r\n            return (<>\r\n                <div>{props.metadata.name} has been bought for {price} BNB.</div>\r\n                <div>View <a rel=\"noreferrer\" target=\"_blank\" href={txLink(result.receipt.transactionHash)}>transaction here</a>.</div>\r\n                <Button onClick={close} className=\"button button button-ok\">Ok</Button>\r\n            </>)\r\n        } else if (result && result.waiting) {\r\n            return <div><Spinner></Spinner></div>\r\n        } else {\r\n            return (\r\n                <>\r\n                <div>Asking price: {price} BNB</div>\r\n        \r\n                { (result && result.error) ? (\r\n                    <>\r\n                        <Button onClick={signTransaction} className=\"button\">Try again</Button>\r\n                        <div className=\"error-text\">{result.error}</div>\r\n                    </>\r\n                ) : null}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Popup\r\n            nested\r\n            modal\r\n            onOpen={signTransaction}\r\n            onClose={() => {\r\n                props.onClose()\r\n            }}\r\n            trigger={\r\n                ({...props.children})\r\n            }>\r\n            {(close: any) => (<div className=\"modal buy-punk-modal\">   \r\n                    <Button className=\"button--modal-close\" onClick={close}>&times;</Button>\r\n                    <h3>Buying {props.metadata.name}</h3>\r\n                    <div className=\"content\">\r\n                        {render(close)}\r\n                    </div>\r\n            </div>)\r\n            }\r\n        </Popup>\r\n    )\r\n}","import Popup from \"reactjs-popup\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Web3Context } from '../contexts/Web3Context';\r\nimport useAddressUtils from \"../hooks/AddressUtils\";\r\nimport Input from \"../components/widgets/Input\";\r\nimport Spinner from \"../components/widgets/Spinner\";\r\nimport Button from \"../components/widgets/Button\";\r\n\r\nexport default function SendTokenModal(props) {\r\n\r\n    const [address, setAddress] = useState(\"\")\r\n    const [result, setResult] = useState<any>()\r\n    const {web3, signedInAddress, writeContract, contracts} = useContext(Web3Context)\r\n    const { txLink } = useAddressUtils()\r\n\r\n    const signTransaction = async () => {\r\n        if (!web3) {\r\n            setResult({\r\n                success: false,\r\n                error: \"Wallet is not connected\"\r\n            })\r\n            return;\r\n        }\r\n\r\n        setResult({\r\n            success: false,\r\n            waiting: true\r\n        })\r\n        \r\n        const result = await writeContract(contracts.shitpunks2, 'safeTransferFrom', [\r\n            signedInAddress, \r\n            address,\r\n            props.tokenId\r\n        ]);\r\n\r\n        setResult(result);\r\n    }\r\n\r\n    const render = (close: any) => {\r\n        if (result && result.success) {\r\n            return (<>\r\n                <div>{props.metadata.name} has been sent.</div>\r\n                <div>View <a rel=\"noreferrer\" target=\"_blank\" href={txLink(result.receipt.transactionHash)}>transaction here</a>.</div>\r\n                <Button onClick={close} className=\"button button button-ok\">Ok</Button>\r\n            </>)\r\n        } else if (result && result.waiting) {\r\n            return <div><Spinner></Spinner></div>\r\n        } else {\r\n            return (\r\n                <>\r\n          \r\n                <Input label=\"receiver address\" onChange={setAddress} value={address}></Input>\r\n                { (result && result.error) ? (\r\n                    <>\r\n                        <div className=\"error-text\">{result.error}</div>\r\n                    </>\r\n                ) : null}\r\n                <Button onClick={signTransaction} className=\"button\">Send</Button>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Popup\r\n            nested\r\n            modal\r\n            onClose={() => {\r\n                props.onClose()\r\n            }}\r\n            trigger={\r\n                ({...props.children})\r\n            }>\r\n            {(close: any) => (<div className=\"modal send-token-modal\">   \r\n                    <Button className=\"button--modal-close\" onClick={close}>&times;</Button>\r\n                    <h3>Sending {props.metadata.name}</h3>\r\n                    <div className=\"content\">\r\n                        {render(close)}\r\n                    </div>\r\n            </div>)\r\n            }\r\n        </Popup>\r\n    )\r\n}","import { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useState, useContext } from 'react';\r\nimport Spinner from './widgets/Spinner';\r\nimport { CollectionInfoContext } from '../contexts/CollectionInfoContext';\r\nimport PunkTradeHistory from './PunkTradeHistory';\r\nimport { Web3Context } from '../contexts/Web3Context';\r\nimport useAddressUtils from '../hooks/AddressUtils';\r\nimport ConnectWrapper from './widgets/ConnectWrapper';\r\nimport ListOnMarketModal from '../modals/ListOnMarketModal';\r\nimport AdjustPriceModal from '../modals/AdjustPriceModal';\r\nimport BuyPunkModal from '../modals/BuyPunkModal';\r\nimport Button from './widgets/Button';\r\nimport SendTokenModal from '../modals/SendTokenModal';\r\nimport tokenIdMap from '../data/tokenid_punkid_map.json';\r\n\r\nconst getRarityImage = (rank) => {\r\n    if (rank < 100) {\r\n        return \"legendary\"\r\n    } else if (rank < 1000) {\r\n        return \"epic\"\r\n    } else if (rank < 2500) {\r\n        return \"rare\"\r\n    } else if (rank < 5000) {\r\n        return \"uncommon\"\r\n    } else {\r\n        return \"common\"\r\n    } \r\n}\r\n\r\nexport default function PunkDetails(props) {\r\n    let { tokenId, punkId } = useParams();\r\n\r\n    if (punkId !== undefined) {\r\n        Object.keys(tokenIdMap).forEach((_tokenId: string, index: number) => {\r\n            const _punkId = tokenIdMap[_tokenId];\r\n            if (_punkId == punkId) {\r\n                tokenId = \"\"+_tokenId;\r\n            }\r\n        })\r\n    }\r\n\r\n    const [metadata, setMetadata] = useState<any>(undefined)\r\n    const [owner, setOwner] = useState<any>(undefined)\r\n    const [sellInfo, setSellInfo] = useState<any>(undefined)\r\n    const [ownedByYou, setOwnedByYou] = useState<boolean>(false)\r\n    const [marketplaceError, setMarketplaceError] = useState<any>(undefined)\r\n    const [waitingForTransaction, setWaitingForTransaction] = useState(false)\r\n    const {rarityData} = useContext(CollectionInfoContext)\r\n    const {signedInAddress, web3, contracts, writeContract} = useContext(Web3Context)\r\n    const [tradehistorySalt, setTradeHistorySalt] = useState(1)\r\n    const { formatDate, formatAddress, addressLink, walletLink } = useAddressUtils();\r\n\r\n    const fetchOwner = async () => {\r\n        if (!web3) {\r\n            setOwner(undefined);\r\n            setSellInfo(undefined)\r\n            return;\r\n        }\r\n\r\n        setWaitingForTransaction(true);\r\n        \r\n        const contractOld = new web3.eth.Contract(contracts.shitpunks.abi, contracts.shitpunks.address)\r\n        let owner = await contractOld.methods.ownerOf(tokenId).call()\r\n\r\n\r\n        if (owner == contracts.shitpunks2.address) {\r\n            const contract = new web3.eth.Contract(contracts.shitpunks2.abi, contracts.shitpunks2.address)\r\n            owner = await contract.methods.ownerOf(tokenId).call()\r\n            setOwner(owner);\r\n        } else if (owner != contracts.pcs.address) {\r\n            setOwner(owner);\r\n        }\r\n\r\n        if (owner == contracts.pcs.address) {\r\n            const contractPcs = new web3.eth.Contract(contracts.pcs.abi, contracts.pcs.address)\r\n            const sellInfo = await contractPcs.methods.viewAsksByCollectionAndTokenIds(contracts.shitpunks2.address, [tokenId]).call()\r\n            setOwner(sellInfo.askInfo[0].seller);\r\n            \r\n            const price = web3.utils.fromWei(sellInfo.askInfo[0].price, 'ether')\r\n            setSellInfo({\r\n                price: price,\r\n                marketplace: \"PancakeSwap\",\r\n                marketplaceLink: `https://pancakeswap.finance/nfts/collections/0x11304895f41C5A9b7fBFb0C4B011A92f1020EF96/${tokenId}`\r\n            })\r\n        } else {\r\n            const contractShitMarket = new web3.eth.Contract((contracts.shitmarket as any).abi, contracts.shitmarket.address)\r\n            const listing = await contractShitMarket.methods.getListing(tokenId).call()\r\n            if (listing[4] && listing[0].toLowerCase() == owner.toLowerCase()) {\r\n                setSellInfo({\r\n                    price: web3.utils.fromWei(listing[3], 'ether'),\r\n                    marketplace: \"Shitmarket\"\r\n                })\r\n            } else {\r\n                setSellInfo(undefined)\r\n            }\r\n        }\r\n\r\n        setWaitingForTransaction(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!contracts.fetched) {\r\n            return;\r\n        }\r\n\r\n        const fetchMetadata = async () => {\r\n            const res = await fetch('https://acy9375pq6.execute-api.us-east-1.amazonaws.com/shitPunkMeta2?index='+tokenId)\r\n            const json = await res.json();\r\n\r\n            setMetadata(json);\r\n            return json;\r\n        }\r\n\r\n        fetchMetadata()\r\n        fetchOwner()\r\n        \r\n    }, [tokenId, web3, contracts.fetched])\r\n\r\n    useEffect(() => {\r\n        const owned = !!(signedInAddress && owner && signedInAddress.length > 0 && (signedInAddress.toLowerCase() == owner.toLowerCase()));\r\n        setOwnedByYou(owned);\r\n    }, [signedInAddress, owner])\r\n\r\n    if (!metadata) {\r\n        return (\r\n            <div><Spinner></Spinner></div>\r\n        )\r\n    }\r\n    \r\n    const rarityImage = '/images/ranks/' + getRarityImage(metadata.rank) +'.png';\r\n\r\n    const getTraitRarity = (trait) => {\r\n        const traitInfo = rarityData.traits.find(t => t.name == trait.trait_type)\r\n        const valueInfo = traitInfo.values.find(v => v.name == trait.value)\r\n        return valueInfo.count;\r\n    }\r\n\r\n    const attributes = metadata.attributes.map(attr => {\r\n        const rarity = getTraitRarity(attr);\r\n        const rarityPercent = parseFloat((rarity / 100).toFixed(2))+\"%\";\r\n        return {\r\n            ...attr,\r\n            rarity: rarity,\r\n            rarityPercent: rarityPercent\r\n        }\r\n    }).sort((a,b) => a.rarity - b.rarity)\r\n\r\n    \r\n\r\n    const cancelListing = async () => {\r\n        setWaitingForTransaction(true)\r\n        setMarketplaceError(undefined)\r\n\r\n        const cancelListingFromMarketPlace = async () => {\r\n            if (sellInfo.marketplace == 'PancakeSwap') {\r\n                return await writeContract(contracts.pcs, \"cancelAskOrder\", [contracts.shitpunks2.address, tokenId]);\r\n            } else {\r\n                return await writeContract(contracts.shitmarket, \"cancelListing\", [tokenId]);\r\n            }\r\n        }\r\n\r\n        const result = await cancelListingFromMarketPlace();\r\n        \r\n        console.log(\"cancelListing done\", result);\r\n        if (result.success) {\r\n            setTradeHistorySalt(tradehistorySalt + 1);\r\n            await fetchOwner();\r\n        } else {\r\n            setMarketplaceError(result.error);\r\n        }\r\n\r\n        setWaitingForTransaction(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <div className=\"page page-punk\">\r\n            <h1>Shit Punk <span>{metadata.id}</span></h1>\r\n            <div className=\"page-punk-main\">\r\n                <div className=\"page-punk-column-left\">\r\n                    <div className=\"punk-details-image-container\">\r\n                        <img className=\"punk-image\" src={metadata.image}></img>\r\n                        <img className='punk-details-card-rarity' src={rarityImage} alt='Rarity'></img>                    \r\n                        { (metadata.attributes.length <= 2 || metadata.attributes.length >= 6) ? (\r\n                            <div className='punk-card-attrcount'>{metadata.attributes.length-1} attr</div>\r\n                        ) : null }\r\n                    </div>\r\n                </div>\r\n                <div className=\"page-punk-column-right\">\r\n\r\n\r\n                    <h2>Current price</h2>\r\n                    { sellInfo ? (\r\n                        <>\r\n                        <div className=\"attributes\">\r\n                            <div className={\"attribute-box\"} style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                <img style={{height: \"2rem\", marginRight: \".5rem\"}} src=\"/images/bnb_icon.png\" />{sellInfo.price} \r\n                                &nbsp;<a href={sellInfo.marketplaceLink} target='_blank' rel=\"noreferrer\">on {sellInfo.marketplace}</a>\r\n                            </div>\r\n                        </div>\r\n                        { ownedByYou ? (\r\n                            <div style={{display: \"flex\", gap: \"1rem\", width: \"100%\"}}>\r\n                                { waitingForTransaction ? (\r\n                                    <Spinner></Spinner>\r\n                                ) : (\r\n                                    <>\r\n                                    <AdjustPriceModal \r\n                                        onClose={() => {\r\n                                            setTradeHistorySalt(tradehistorySalt + 1);\r\n                                            fetchOwner()\r\n                                        }}\r\n                                        metadata={metadata} \r\n                                        tokenId={tokenId}\r\n                                        price={sellInfo.price}\r\n                                        sellInfo={sellInfo}\r\n                                    >\r\n                                        <Button className=\"button\">Adjust price</Button>\r\n                                    </AdjustPriceModal>\r\n\r\n                                    <Button onClick={cancelListing} className=\"button\">Cancel listing</Button>\r\n                                    </>\r\n                                )}\r\n                                \r\n                            </div>\r\n                            \r\n                        ) : (\r\n                            <ConnectWrapper connectText=\"Connect wallet to buy\">\r\n                                <BuyPunkModal \r\n                                    onClose={() => {\r\n                                        setTradeHistorySalt(tradehistorySalt + 1);\r\n                                        fetchOwner()\r\n                                    }}\r\n                                    metadata={metadata} \r\n                                    tokenId={tokenId}\r\n                                    price={sellInfo.price}\r\n                                    sellInfo={sellInfo}\r\n                                >\r\n                                    <Button className=\"button button--green\">Buy</Button>\r\n                                </BuyPunkModal>\r\n                            </ConnectWrapper>\r\n                        )}\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                        <div className=\"attributes\">\r\n                            <div className=\"attribute-box\">\r\n                                Not for sale\r\n                            </div>\r\n                        </div>                        \r\n                        { ownedByYou ? (\r\n                            <>\r\n                            <ListOnMarketModal \r\n                                metadata={metadata} \r\n                                tokenId={tokenId} \r\n                                onChange={fetchOwner}\r\n                            >\r\n                                <Button className=\"button\">List on ShitMarket</Button>\r\n                            </ListOnMarketModal>\r\n                            <SendTokenModal\r\n                                metadata={metadata} \r\n                                tokenId={tokenId} \r\n                                onClose={fetchOwner}>\r\n                                <Button className=\"button\">Send</Button>\r\n                            </SendTokenModal>\r\n                            </>\r\n                        ) : null}\r\n                        </>\r\n                    )}\r\n\r\n                    { (marketplaceError) ? <div className=\"error-text\">{marketplaceError}</div> : null}\r\n                  \r\n                    <br />\r\n\r\n                    <h2>Details</h2>\r\n                    <div className=\"attributes\">\r\n                        <div className={\"attribute-box\"}>\r\n                            <div className=\"attribute-box-type\">Token id</div>\r\n                            <div className=\"attribute-box-value\">{tokenId}</div>\r\n                        </div>\r\n                        <div className={\"attribute-box\"}>\r\n                            <div className=\"attribute-box-type\">Rank</div>\r\n                            <div className=\"attribute-box-value\">{metadata.rank}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <h2>Attributes</h2>\r\n                    <div className=\"attributes\">\r\n                    {attributes.map(attr => {\r\n                        const extraClassName = attr.trait_type == \"Type\" ? \" attribute-box--type\" : \"\";\r\n                        return (\r\n                            <div className={\"attribute-box\" + extraClassName} key={attr.trait_type}>\r\n                                <div className=\"attribute-box-type\">{attr.trait_type}</div>\r\n                                <div className=\"attribute-box-value\">{attr.value}</div>\r\n                                <div className=\"attribute-box-rarity\">{attr.rarityPercent}</div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    </div>\r\n\r\n\r\n                    <h2>Owner</h2>\r\n                    <div className=\"attributes\">\r\n                        <div className={\"attribute-box\"} style={{flexDirection: \"row\"}}>\r\n                            { walletLink(owner) } \r\n                            <a href={addressLink(owner)} target=\"_blank\" rel=\"noreferrer\">\r\n                                { formatAddress(owner) }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"page-punk-trade-history\">\r\n                <h3>Trade history</h3>\r\n                <div style={{color: \"#666\"}}>Note! Some trades are missing from this list. This will be addressed soon.</div>\r\n                <PunkTradeHistory salt={tradehistorySalt} punkId={metadata.id}></PunkTradeHistory>\r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { Routes, Route } from 'react-router-dom';\r\nimport Collection from '../Collection';\r\nimport Home from '../Home';\r\nimport Marketplace from '../marketplace/Marketplace';\r\nimport { NFTCalendar } from '../NFTCalendar';\r\nimport NFTCalendarForm from '../NFTCalendarForm'\r\nimport PunkDetails from '../PunkDetails';\r\n\r\nexport default function Main() {\r\n    return (\r\n        <div className=\"main\">\r\n            <Routes>\r\n                <Route path=\"/punk/:tokenId\" element={<PunkDetails/>}></Route>\r\n                <Route path=\"/token/:tokenId\" element={<PunkDetails/>}></Route>\r\n                <Route path=\"/shitpunk/:punkId\" element={<PunkDetails/>}></Route>\r\n                <Route path=\"/marketplace/activity\" element={<Marketplace key=\"activity\" marketplaceMode=\"activity\"/>}></Route>\r\n                <Route path=\"/marketplace/all\" element={<Marketplace key=\"all\" marketplaceMode=\"all\"/>}></Route>\r\n                <Route path=\"/marketplace/*\" element={<Marketplace key=\"forsale\" marketplaceMode=\"forsale\"/>}></Route>\r\n                <Route path=\"/collection/*\" element={<Collection/>}></Route>\r\n                <Route path=\"/nftdrops/released\" element={<NFTCalendar key=\"released\" mode=\"released\"/>}></Route>\r\n                <Route path=\"/nftdrops/form\" element={<NFTCalendarForm/>}></Route>\r\n                <Route path=\"/nftdrops/*\" element={<NFTCalendar key=\"upcoming\" mode=\"upcoming\"/>}></Route>\r\n                \r\n                <Route path=\"*\" element={<Home/>}></Route>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","import SocialLinks from \"../SocialLinks\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { useState } from \"react\";\r\n\r\nexport default function Footer() {\r\n    const [copied, setCopied] = useState(false);\r\n\r\n    const copyClipboard = () => {\r\n        setCopied(true);\r\n        setTimeout(() => {\r\n            setCopied(false);\r\n        }, 1500)\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n\r\n            <div className=\"footer-items\">\r\n                <div className=\"footer-about\">\r\n                    <img className=\"shitpunks-logo-footer\" src=\"/images/logo.png\"/>\r\n                    <div className=\"footer-text\">\r\n                        <h3 className=\"footer-header\">About The Project</h3>\r\n                        ShitPunks is a collection of 10,000 hand-drawn punks on the Binance Smart Chain based off the infamous CryptoPunks collection.\r\n\r\n                        <div className=\"footer-contract\"><span>Contract:</span>\r\n                            &nbsp;<a rel=\"noreferrer\" target=\"_blank\" href=\"https://bscscan.com/address/0x11304895f41c5a9b7fbfb0c4b011a92f1020ef96\">0x1130...F96</a>\r\n                            &nbsp;<CopyToClipboard text=\"0x11304895f41C5A9b7fBFb0C4B011A92f1020EF96\">\r\n                            <span onClick={copyClipboard} className=\"copy-clipboard-icon\"><i className=\"fas fa-clipboard\"></i></span>\r\n                            </CopyToClipboard>\r\n                            { copied ? <span className=\"copied-text\">Copied!</span> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"footer-social\">\r\n                    <h3 className=\"footer-header\">Social media</h3>\r\n                    <SocialLinks ></SocialLinks>\r\n                </div>               \r\n            </div>\r\n\r\n            <div className=\"footer-copyright\">\r\n                Copyright © 2021 Shitpunks LLC, All Rights Reserved.\r\n                Not affiliated with Larva Labs or CryptoPunks.\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import TopBar from './components/layout/TopBar';\r\nimport Main from './components/layout/Main';\r\nimport Footer from './components/layout/Footer';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Web3Provider } from './contexts/Web3Context';\r\nimport { CollectionInfoProvider } from './contexts/CollectionInfoContext';\r\n\r\nfunction App() {\r\n  console.log(\"App()\")\r\n  return (\r\n    <>\r\n      <div className=\"app\">\r\n        <CollectionInfoProvider>\r\n        <Web3Provider>\r\n          <BrowserRouter>\r\n            <TopBar />\r\n            <Main />\r\n            \r\n          </BrowserRouter>\r\n        </Web3Provider>\r\n        </CollectionInfoProvider>\r\n        \r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './scss/styles.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}